<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Magic ABC</title>
    <link href="feed.xml" rel="self" />
    <link href="" />
    <id>feed.xml</id>
    <entry>
        <title type="html"><![CDATA[百度助纣为虐]]></title>
        <link href="idea/baidu-sucks.html"/>
        <published>2016-05-01T16:00:00.000Z</published>
        <updated>2016-05-01T16:00:00.000Z</updated>
        <id>idea/baidu-sucks.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>最近百度又因为良心问题上头条了，当然由于这个企业不认为自己良心有问题，所以类似的事情已经重复过很多次了，而且这一届的人民也很健忘。</p>
<p><a href="http://money.163.com/16/0501/19/BM0KPGJO00253B0H.html">http://money.163.com/16/0501/19/BM0KPGJO00253B0H.html</a></p>
<p>要客观的讨论百度，须要先撇开事件讨论对百度的看法。我认为，百度搜索结果非常垃圾，稍微专业一些的搜索关键字，给出的搜索结果多数是些错误的链接。但是搜索娱乐内容视频、小说、音乐倒是精准和方便，以前不讲版权的时代甚至公然侵权。</p>
<p>回到事件本身，如果要控告百度一项罪行的话，我认为，应该是，百度以主动意愿向用户呈现欺诈链接的搜索结果，依据是相关的欺诈搜索结果均呈现在第一搜索结果页的前几条中，有的链接设置加蓝V，并且有一定证据表明欺诈网站的广告主向百度支付了高额的广告费。</p>
<p>当然，有人不是这个观点，他并不认为百度此行为有任何错误，理由是百度向用户提供免费的搜索服务，并无义务向用户呈现最佳的结果，并有权处置链接在搜索结果页上的显示位置。</p>
<p>我并不反对这个观点，因为观点本身是合理的。但是百度行为失格的地方在于，他是一个社会基础广泛的服务，就像一个非常好用的指南针（实际上不好用，但对赵国多数人已经足够，并且这一届人民也没有太多选择），用户众多，但是却将指针故意指向广告主所要求的任意方向，使得用户落入欺诈的圈套。</p>
<p>在没有搜索引擎的前提下，欺诈网站想要精确的暴露在用户面前是困难的，而百度则将这种困难抹平，并且没有采取任何措施，甚至于收到广告费后将他们呈现到用户的搜索结果第一页的前几条中，这可不可以说是助纣为虐呢。</p>
<p>如果看到罪行只是旁观，那有可能是因为阻止有危险，沉默是合理的。但若是看到罪行影响的不够大，还客观而中立的推波助澜，那就太可怕了。</p>
<p>不过作恶的人不必害怕，没有遭天谴这种事。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[我眼中未来的趋势]]></title>
        <link href="idea/thefuture.html"/>
        <published>2016-03-18T16:00:00.000Z</published>
        <updated>2016-03-18T16:00:00.000Z</updated>
        <id>idea/thefuture.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>技术在加速，了解未来的可能性，才能立足在正确的方向上。这个时代的人都说，“我不想逆流而上，我只想找到一块山顶的石头，轻轻一脚”。</p>
<ul>
<li>所有的电器，机械全面联网，通过WiFi，RF射频的手段，也就是所谓的物联网。物联网只是全面联网的一个子集。联网的设备全部可以远程监控，编程控制，实现弱智能，提供人性化的服务。传感器会更加丰富，更加精确，更加集成。</li>
</ul>
<hr>
<ul>
<li>各行业使用大数据挖掘更加普遍，分类、聚类、关联是基本的手段，人类不断被分类和标签化，任何时候都能找到精准的群体。群体的属性没有隐私，离群者被风控重点关注。</li>
</ul>
<hr>
<ul>
<li>更多的互联网公司提供小微金融服务，从生活消费到大件消费，均以信用作为支付手段，信贷货币总量再次膨胀，股市会有一波上涨。</li>
</ul>
<hr>
<ul>
<li>更多的中小企业会采用相关领域的SAAS来提升自身的流程规范。一方面原因是开发者增多，所以能为更多的领域提供软件服务，另一方面则是软件的开发成本不断下降，中小企业可以负担采购成本。</li>
</ul>
<hr>
<ul>
<li>机械臂将大量取代体力劳动，重复的脑力劳动也渐渐被软件取代。</li>
</ul>
<hr>
<ul>
<li><p>未来是租用的时代（KK），比如Uber，Airbnb，使用物品的唯一方式不在是占有，而是可以租借。</p>
</li>
<li><p>VR的时代（KK），眼镜或者头戴设备，将真实与虚拟结合。我并不觉得VR会带来多大的改变，因为VR本质是一种输入输出方式，随着技术进步已有的屏幕式的输入输出手段会更加普遍更加成熟，对于大量复杂的操作环境来说，VR是无法涵盖所有情景的。VR比较有用的一个地方就是训练，但实际上也不一定是最合适的方案。</p>
</li>
</ul>
<hr>
<ul>
<li>人工智能？最近Alphago是很火，但是下棋只是一种简单的计算策略，现阶段的人工智能距离存在认知概念这件事情还很遥远，他们能根据图片推断出一只猫，但猫是什么对他们是没有认知的。他们可以通过积累的规范数据，挖掘你的习惯，更准确的为你提供已知的服务，但是他们无法创造出更多。</li>
</ul>
<p>自主思考是一件很神奇的事情，即使通过神经网络创造出未知的多样性，没有和人类一样的认知的智能是十分危险的，就跟无任何道德意识的高智商犯罪一样，可能做出危险的事情。</p>
<hr>
<p>这就是我眼中未来的趋势，他们都是科技上的趋势，我希望这些更发达的科技，能够推动社会和政治上的进步。虽然我们现在有更多更容易的渠道暴露黑暗，但是爪牙还很厉害，爪牙还在为经济原因而服从。但愿技术推动生产力的发展，使社会觉醒。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[如何才能坚持写日记]]></title>
        <link href="idea/insist-on-writing.html"/>
        <published>2016-03-17T16:00:00.000Z</published>
        <updated>2016-03-17T16:00:00.000Z</updated>
        <id>idea/insist-on-writing.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>俗话说的好，做事贵在坚持，学习如此，起床如此，写日记也是如此。</p>
<p>小学的事情我忘了，但中学我是写日记的，大体内容是记录新的世界观感想，叙述邻桌那位女同学。我一共写了好几本，直到有一天父母翻看了我的日记，我一把火就把它们都烧了，后来再也没有写过日记。上大学后，由于学技术的原因，写了好长一段时间的技术博客，学习感悟多的时候，几乎是周周发。渐渐的随着技术能力的积累，达到一个收益下降的边际，就很少发文了。</p>
<p>这一中断就是好长时间，中间也有过搭建新博客，但都是发了几篇后就再也写不出来，博客也删掉了。我的最后一个blog就是github，文章就在git repo，无处不在，不再像过去那样文章只留档在博客平台的数据库中，无法自己存留一份。为了珍惜这难得的写作机会，我又重新想起了写日记。</p>
<p>一开始我是用格志app做每天的记录，一周汇总一次，发周记到博客。持续了三个月，我又中断了。我坚持不下去除了懒，还有欲望。我没有在这个4英寸的屏幕上敲字的欲望，我没有只能敲字的欲望，我有时候需要其他的表达方式。用app写日记这个事情，没有美感。</p>
<p>在电脑上写日记我也有考虑过，觉得不习惯，肯定坚持不下去。它不能随时记录，要打开电脑等待开机，敲键盘影响思维漫游，电脑天然的多任务干扰，想按自己的样式进行书写的话成本也比较高。</p>
<p>就这样，我停了三个月，养精蓄锐，然后我买了一个日记本，铁环、16开到32开之间，细长细长。我又开始写日记了，手写。我随意的记录，一段文字，或者是一份清单，或者一份结构图，自由发挥。我买小笔记本，是怕页太大，留空太多，影响坚持的力量。每一本日记，都应该是越容易写完越有成就感，更容易坚持。我坚持下来了，并总结出一些让这事更容易的一些点：</p>
<ul>
<li>买小笔记本，越小越薄，越容易写完，接着买第二本漂亮的</li>
<li>打开左页右页的共同面，两页只能写一天的内容。或者只写右页，左页留白</li>
<li>行间距要大，文字写在两行的中间线上，可以更快的写满一页</li>
<li>除了生活，学习和工作都可以写，不限定只写文字，各种相关结构图都可以画，当成笔记，手帐</li>
<li>可以往页面上贴东西，图，照片，标签，任何当天相关的东西</li>
<li>几根彩带，做书签用</li>
</ul>
<p>为了坚持写日记而如此费心思，所为的也是记录，鞭策和努力。记录你的所见所闻，记录你今天所学，记录你的目标，记录你的思考，记录你的行动，然后回顾，总结，发blog。只有留下文字的人生，能够被重新读起，才没有白活。</p>
<p>下篇：我看到的未来的趋势</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记2016]]></title>
        <link href="life/2016new.html"/>
        <published>2016-01-01T16:00:00.000Z</published>
        <updated>2016-01-01T16:00:00.000Z</updated>
        <id>life/2016new.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>有一阵子没发周记了，其实都有用软件每日小记一下，虽然不够连续。</p>
<p>发生了一些事情，有好事有坏事。</p>
<p>1221领证了，终于摆脱无证驾驶的问题，嘿嘿。今后的路依旧很长，继续努力。</p>
<p>终于花时间去了解webbuilder，可以全代码做应用，并且复用服务器和客户端的代码了。</p>
<p>老婆没能在广电转正，小地方IT落后，不是很看好女性做这个啊。不过塞翁失马焉知非福，可以去换一个喜欢的方向更好。</p>
<p>zb查出了cancer，积极治疗中，愿大家健康。</p>
<p>月底假装参加了年结，不负责什么，就是去吃吃火锅，然后领红包回去睡觉。</p>
<h2 id="新一年计划">新一年计划</h2><p>我的时空，可能依旧还无法发散到乐趣上，继续集中在增强技能和增加财富方面。</p>
<p>以下几个途径：</p>
<ol>
<li>增强套利方式的理解，抓住套利机会。意味着多阅读，但是也要沉住气，控制好子弹是关键，不要弹到用时方恨少。</li>
<li>外包项目，可以做一些，收入也还可以。</li>
<li>深入做一个系统，真有用的系统永远可以卖出很多钱，互联网那些浅薄的随便都能山寨出来的项目就算了。</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记1206]]></title>
        <link href="life/20151206-weekly.html"/>
        <published>2015-12-05T16:00:00.000Z</published>
        <updated>2015-12-05T16:00:00.000Z</updated>
        <id>life/20151206-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="时间">时间</h2><p>Yellow, 34 coins, 低于50 coins每周。最近是需要多努力一点。</p>
<h2 id="记事">记事</h2><ol>
<li><p>hbuilder云编译的应用有问题，无法装到4.4虚拟机，不得已自己下了一套sdk本地编译。</p>
</li>
<li><p>软件中级资格证拿到手了，太easy。</p>
</li>
<li><p>redis是好东西啊，订阅模式和有序队列。准备再看看zookeeper。</p>
</li>
<li><p>纪念碑谷限免，通过，确实是神一般的游戏。
<img src="/life/pic/jnbg1.png" alt="game1">
<img src="/life/pic/jnbg2.png" alt="game2"></p>
</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记1123]]></title>
        <link href="life/20151122-weekly.html"/>
        <published>2015-11-21T16:00:00.000Z</published>
        <updated>2015-11-21T16:00:00.000Z</updated>
        <id>life/20151122-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="时间">时间</h2><p>Yellow 40<br>Orange 20  </p>
<p>这周事情做的不多啊。</p>
<h2 id="事件">事件</h2><p>负责需求的人必须会做原型，方能降低沟通成本和返工工作量。</p>
<p>公司要求调档，去咨询一下，我的档案还在大学生就业中心，不在人才中心，无法办理转正定级，最坏的情况就是丢掉几年工龄。</p>
<p>每周出差去桂林，其实蛮无聊的，真是一份无聊的工作啊。</p>
<p>订单表还是要记录一些产品冗余信息的，为了显示和快照。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[rails小项目的一些分享]]></title>
        <link href="idea/rails-exp.html"/>
        <published>2015-11-15T16:00:00.000Z</published>
        <updated>2015-11-15T16:00:00.000Z</updated>
        <id>idea/rails-exp.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>为了满足自己炒股兴趣的需要，根据<a href="http://www.amazon.com/Little-Book-Still-Beats-Market/dp/0470624159">《神奇公式》</a>，对A股市场做了一个排序系统，既完成了一个对自己有效的需求，也从中学习rails。</p>
<p><strong>Source</strong> : <a href="https://coding.net/u/hwh008/p/mss/git">https://coding.net/u/hwh008/p/mss/git</a></p>
<p><strong>Site</strong> : <a href="http://www.magica.me">http://www.magica.me</a></p>
<h2 id="爬虫">爬虫</h2><p>股票的财务数据都是从sina抓的，所以<a href="http://www.nokogiri.org/">Nokogiri</a>是首选，有了他，做点基础的爬虫实在太容易了。</p>
<p>用whenever每天定点去爬一下收盘价，顺便检测一些需要更新财务数据的股票。</p>
<pre>StockInfo.tick_sheet</pre><h2 id="缓存">缓存</h2><p>我有一个很耗时的model函数，也就是对所有股票进行排序的公式实现：</p>
<pre>StockSheet.calc_better_cheap</pre><p>我希望这个公式的结果页面显示后，可以重用这个页面，不要重新计算排序，因此我尝试了action cache和fragment cache，然而并没有什么卵用，因为这两种cache都还是要执行controller#action的，费时的函数调用恰好放在action中。我可以把这个调用放到view里，这样就解决了问题，但是又涉及到请求参数变化的问题，而且这串调用放到view里也带来了限制，不方便在action里对数据做更多的修饰。  </p>
<p>另外，我也搞不清楚fragment cache的实现机制和最佳实践。</p>
<p>经过搜索我找到了<a href="https://github.com/qor/qor_cache">qor_cache</a>，还是国人的优秀作品，有3点好处：</p>
<ol>
<li>针对Model函数结果的cache，正好我就是model函数耗时多。</li>
<li>qor_cache wrap了我指定的函数，使得我的代码对这个gem没有依赖，可以轻易的从config中删掉qor_cache。</li>
<li>以接口的方式告诉我一条cache的最佳实践：<blockquote>
<p>The cache key is the fluid part and the cache content is the fixed part. A given key should always return the same content. You never update the content after it’s been written and you never try to expire it either.</p>
</blockquote>
</li>
</ol>
<pre>cache_key &#39;stock_update&#39; do
    StockInfo.first.updated_at
end

scope :stock_sheet do
    cache_class_method :calc_better_cheap, &#39;stock_update&#39;
end</pre><p>函数的输入参数是一个hash obj，qor_cache将参数作为cache key的一部分，但是这个hash obj中，其实有些key并不影响cache，因此我根据qor_cache做了一个hack：</p>
<pre>hash_obj.instance_eval do
        # 为了优化qor cache，不是每个选项都影响cache key
        def inspect
            %Q(inspect redefine:#{self[&quot;mktcap_min&quot;]},#{self[&quot;mktcap_max&quot;]})
        end
        self
    end</pre><h2 id="翻页">翻页</h2><p>我没有使用will_paginate，因为will_paginate只包装relation对象，但我要做的是对数据进行排序计算，已经将数据全部都取出来了，因此找了一个支持page array的gem：<a href="https://github.com/amatsuda/kaminari">kaminari</a>，听这名字像日本人写的gem。</p>
<pre>  def better_cheap
    stocks = Kaminari.paginate_array StockSheet.calc_better_cheap(calc_params)
    @stocks_page = stocks.page(params.fetch(:page, 1)).per 100
  end</pre><h2 id="函数式fp">函数式FP</h2><p>函数式编程其实就是好看，可以把对集合的一连串操作都写在一行里，长长的。</p>
<p>神奇公式的排序算法就是，将集合所有元素根据指标A排序，取排序顺序为分数A，再根据指标B排序，取排序顺序为分数B，根据分数AB之和再排序。写到一行里是这样的：</p>
<pre>def self.calc_better_cheap(opt)
    available(opt).sort { |a, b| a.better_v &lt;=&gt; b.better_v }.reverse.map.with_index(1) { |el, i| el.better_ord = i ; el}.sort { |a,b| a.cheap_v &lt;=&gt; b.cheap_v }.reverse.map.with_index(1) { |el, i| el.cheap_ord = i; el}.sort { |a,b| a.bc_value &lt;=&gt; b.bc_value }
  end</pre><h2 id="nginx-passenger">nginx + passenger</h2><p>生产部署用的是passenger，很简单，安装就好了。就是环境变量遇上了一些问题，后来通过dotenv-rails解决。</p>
<h2 id="helper让view漂亮">Helper让View漂亮</h2><p>有两种不漂亮的写法，一种是在view里写表达式，另一种是在action里把表达式算好的结果放到instance var。</p>
<p>不过erb模版对Helper的支持还是不够漂亮，我比较倾向的是那种管道式的，这样可以把一串helper像羊肉串一样串起来。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20151116-weekly.html"/>
        <published>2015-11-15T16:00:00.000Z</published>
        <updated>2015-11-15T16:00:00.000Z</updated>
        <id>life/20151116-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="统计">统计</h2><p>橙色：22枚<br>黄色：54枚<br>蓝色：32枚  </p>
<p>周末实在太懒散了，什么都没有做。</p>
<h2 id="本周要事">本周要事</h2><ul>
<li>怕冷，容易感冒</li>
<li>在处理档案和贷款合同的事情上，容易犯拖延症，怕与人接触。不过据说积极性和注意力一样是一种每日有限资源，如果在一件事情上投入多了，别的事情就会需要反方向的补充。</li>
<li>唉</li>
</ul>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记1111]]></title>
        <link href="life/20151111-weekly.html"/>
        <published>2015-11-10T16:00:00.000Z</published>
        <updated>2015-11-10T16:00:00.000Z</updated>
        <id>life/20151111-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>橙色：42枚<br>黄色：31枚<br>蓝色：08枚<br>红色：02枚  </p>
<p>奖励31/4 - 2/2 = 6枚</p>
<p>这两周的量都不是很足够，因为工作的活儿有点多。</p>
<h2 id="本周要事">本周要事</h2><ul>
<li><p>房贷办理下来，开始要还了，每个月2800，有点不爽，出钱总是不爽的。</p>
</li>
<li><p>做了点马尔代夫的调研，找到一个选岛工具。一般两人预算也就3w多吧，想玩浮潜和水屋，我喜欢无边泳池啊。</p>
</li>
<li><p>股票的网站上线了，域名也申请下来，还是很有意思的，<a href="http://www.magica.me">筹码游戏</a>。我的个人博客也放在这个二级域名下了，<a href="http://blog.magica.me">MAGICABC</a>。</p>
</li>
<li><p>古摄影想来消除老婆写的差评，最后不得不计划重拍3套，其实我对重拍真是没什么兴趣了，但是他们又不肯赔钱，磨磨唧唧的最后出卖了自己。</p>
</li>
<li><p>以10元价格蹭了联通的2G流量，又一阵子无忧啦。</p>
</li>
</ul>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20151101-weekly.html"/>
        <published>2015-10-31T16:00:00.000Z</published>
        <updated>2015-10-31T16:00:00.000Z</updated>
        <id>life/20151101-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>黄色：040枚<br>橙色：040枚  </p>
<p>没有达标50枚标准，因为周末感冒严重了，现在还是不停打喷嚏，不舒服啊。</p>
<h2 id="本周记事">本周记事</h2><p>Vuejs发布1.0版本，本来打算升级，阅读更新公告后发现只是增加了一些语法简写以及控件子事件指令，我模仿着写一个指令，并不升级。</p>
<p>做app用HBuilder，真是好东西不用愁，可以在win打包apk发布，还可以发布到iphone真机调试，指令也比较全面，真是好用的没话说。</p>
<p>周五想挑周边玩玩，结果发现除了桂林，其他景点真是又小又难看，毫无可看的。其实桂林也真是超级low的，皮条客满街都是。</p>
<p>在sprint+jsp环境下尝试web服务端开发的最佳实践，也就是template,layout,helper这些东西，用jsp的simple tag完成的。虽然也做到了，不过总是要带入taglib也真是相当不方便。</p>
<p>周末走了走青秀山，阴天偶尔小雨，看看各种植物还是非常不错的。</p>
<p>基于rails的股票神奇公式计算项目<a href="https://coding.net/u/hwh008/p/mss/git">MSS</a>，第一阶段完成啦。第一阶段做的就是抓股价和财报数据，按神奇公式计算排名和安全值。准备开始第二阶段，抓相应的财务指标走势数据，用分类器进行分类，并给出买入建议。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[选择前端框架的想法]]></title>
        <link href="idea/vuejs.html"/>
        <published>2015-10-25T16:00:00.000Z</published>
        <updated>2015-10-25T16:00:00.000Z</updated>
        <id>idea/vuejs.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="我接触过的阶段">我接触过的阶段</h2><p>应该是从jquery+div开始第一次接触的，那时候整个前端对非这个方向的人还是很麻烦的，css和布局都不会调整，即使会写脚本随意的操作dom，写出来的界面也是丑陋无比。这个时代想要个好看的动态控件都是靠找javascript库。</p>
<p>第二个阶段是bootstrap，总算有一个不用靠设计师也能做出对齐标准的css框架了，而且学起来还不难。随后一大片bootstrap like的小网站就纷纷冒出来了，以及更多的css框架也发布出来。虽然一时间也审美疲劳，但是不可否认这种css框架解决了基本的控件样式和对齐问题。</p>
<p>第三个阶段应该是ember,backbone这种库吧，我没有参与到这个阶段，但感觉上这应该是SPA，rich client的一个过渡阶段。这个阶段的库包含了model,view,controller,router,store等元素，整个就是一个rails的客户端化。这样一个发展方向有些偏激了，库的学习成本高，并且很难和别的库，框架兼容，所以我认为这是一个过渡阶段。</p>
<p>第四个阶段就是现在，以reactjs,angularjs为代表的组件化和数据绑定阶段。这个阶段基本上屏蔽了dom操作，使得页面标签更具语意和功能，可读性和可维护性都更高。这个阶段的关键技术是指令，filter,组件。</p>
<h2 id="在组件化和数据绑定时代下的选择">在组件化和数据绑定时代下的选择</h2><p>这是一个比以前都好的时代，从技术上说，各种表现技术越来越完善，门槛越来越低。</p>
<p>组件化和数据绑定为基础，并以指令和filter相配合，在客户端的model,view层面已经是威力倍增。我认为目前的技术条件下，前端的开发结构以VM(view,model)为一个聚集，styling,router为另一个聚集是合适的。</p>
<p>styling就是各种css框架，从bootstrap开始，无数的后起之秀，带来了丰富的基本控件和页面结构，以及多种的终端适配，PC的，HTML5的，hybrid app的。特别是介入SPA的内页切换后，内置的router和基本的约定规则势在必行。</p>
<p>另一块则是view,model，view负责渲染模版，model负责向模版提供数据。特别是数据绑定的概念普及以后，操作dom渐渐被视为异类，这两块已经没有必要再拆分了。view在渲染模版方面则出现了自定义组件的引擎，并配合指令和filter，极大的拓展的页面代码的复用和可理解性。</p>
<p>基于这一看法，ember等全面的MVC router大框架逐渐淘汰也是必然。大家其实要的是更好的组装性和组件性，而不是在一棵树上吊死。</p>
<p>在VM库上，除了代表者reactjs和angularjs，还有很多后起之秀，如Vue.js。angularjs我看过，用内置的指令还简单，自己开发新指令文档描述的令人发指。reactjs也看了，我实在不喜欢把组件和代码都写到script标签下。最后选定的还是Vue.js，数据绑定简单明了，新建组件、指令和filter也都是一句话的事情。</p>
<p>至于Vue.js这样的VM库是否适应所有的web项目，我还是觉得这要考虑项目想做成什么样子，以及server端框架的完善性。如server端是rails，多数情况是没必要用VM库的。但是若开发一个SPA，从服务端取json，那一个适合的css框架和VM库，会让工作事半功倍。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20151026-weekly.html"/>
        <published>2015-10-25T16:00:00.000Z</published>
        <updated>2015-10-25T16:00:00.000Z</updated>
        <id>life/20151026-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>绿色：100枚<br>黄色：050枚<br>橙色：030枚<br>红色：006枚  </p>
<p>经过几周的记录，基本可以明确一周大概200枚金币。时间如金钱，用一枚少一枚。其中绿色布局在100枚出头，不再另计。主要登记黄橙红蓝，黄色能保持在50枚以上是情况比较好的情形了，再往上努力则更加辛苦。红色应保持在10枚以下，橙色不使用的时候则是向黄色进行补充。</p>
<blockquote>
<p>人生苦短，2/3的时间用在吃，睡，聊上面，约1/6用在有意义的事情上，1/6用在挣生活费上。</p>
</blockquote>
<h2 id="本周要事">本周要事</h2><ol>
<li><p>小领导的白事，第一次听说白事也给份子钱，给了。</p>
</li>
<li><p>拿到项目首付款，啧啧，真是突然挣了一下。</p>
</li>
<li><p>周六跟LP闹矛盾了，嗯，有我的不对。做人还是容易苛刻啊，可是又不甘心一起拉低水平线。</p>
</li>
<li><p>这个月市场还是猜的挺准的，利用A类和创业板ETF反复对冲，喝了点汤水。</p>
</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20151019-weekly.html"/>
        <published>2015-10-18T16:00:00.000Z</published>
        <updated>2015-10-18T16:00:00.000Z</updated>
        <id>life/20151019-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p><strong> 摆酒过门 </strong></p>
<p>10月9日办的，中午12点才磕的头，急急忙忙的1点才开始，几乎没有迎宾。等每桌敬酒客人就已经吃饱要走了。<br>当天的安排上现在想想还是有些遗憾的，但是新生活在继续中又开始了。</p>
<p><strong> 本周其他要事 </strong></p>
<ol>
<li><p>在桂林吃了份辣椒炒粉，第二天拉了3次。。。。这食物的毒性甚过北京。</p>
</li>
<li><p>琅琊榜电视剧看完了，也是沉迷了几日。</p>
</li>
<li><p>桂林银行是不是有什么人得罪桂林网安了，一直被死咬不放，现在又拿流程不规范说事，暂时关闭了。</p>
</li>
<li><p>ios升级9.0.2，然后卡就不能用，没信号了。直到上周末找人修理，发现是我以前剪的大卡出问题了，去营业厅换张小卡就好了。<br>还以为要跟北京彻底告别呢，手机号还是北京的。</p>
</li>
<li><p>重仓大量分级A，一支股票都没有，就等着股市临时下跌呢。</p>
</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20150929-weekly.html"/>
        <published>2015-09-27T16:00:00.000Z</published>
        <updated>2015-09-27T16:00:00.000Z</updated>
        <id>life/20150929-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>绿色：140，67%<br>橙色：032，15%<br>黄色：028，13%<br>红色：009，04%  </p>
<p>总计：209<br>奖励：28/4 - 9/2 = 2.5 (一个半小时)</p>
<p><strong>本周要事</strong></p>
<ol>
<li><p>去兴业的事情黄了，也没怎么可惜，毕竟不想分居</p>
</li>
<li><p>电商被检测出重置任意用户密码的漏洞，原始的原因竟然是开发公司愚蠢的两次请求的接口写法，框架落后坑自己啊</p>
</li>
<li><p>看小说容易沉迷当前的情节，浪费时间</p>
</li>
</ol>
<p>看来本周没有发生积极的事情，遗憾。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20150921-weekly.html"/>
        <published>2015-09-20T16:00:00.000Z</published>
        <updated>2015-09-20T16:00:00.000Z</updated>
        <id>life/20150921-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>绿色: 119, 55.5%<br>黄色：055, 25.5%<br>蓝色：016, 7%<br>橙色：013, 6%<br>红色：003, 1.5%  </p>
<p>总计：206</p>
<p>本周发生的事情：</p>
<ol>
<li><p>下载了rails guide的git，在火车路上进行阅读，拓展了学习时间。</p>
</li>
<li><p>古摄影的产品很垃圾，完全没有后期，我妹子被迫自己成为了PS大神。现在承接婚纱照、写真照精修，100一张，满意为止。</p>
</li>
<li><p>周五少挣了1K，从中学到，止赢比止损更有本事，犹豫有风险。</p>
</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20150913-weekly.html"/>
        <published>2015-09-12T16:00:00.000Z</published>
        <updated>2015-09-12T16:00:00.000Z</updated>
        <id>life/20150913-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>绿色：100枚，46%<br>黄色：072枚，33%<br>橙色：026枚，12%<br>蓝色：011枚，5%<br>红色：008枚  </p>
<p>总计：209枚</p>
<p>有进步，黄色时间大量增加了，绿色的和橙色的这两周都差不多。<br>(黄色/4 - 红色/2) 努力产生的奖励时间是必须的，不然这个游戏就没有积极性。</p>
<p>本周发生的事情：</p>
<ol>
<li>hyc找我做个印刷系统的订单管理项目。调研中发现了nativescript，做原生app是好物。reactjs现在还不支持android。</li>
<li>配了新眼镜，拿到验光数据，视力不过度使用的话，已经不会有什么太大变动了。以后可以凭借这份验光数据在x宝多配几副在几个地方备用。</li>
<li>发现厉害的大学同班孙胖子是现在coding.net的CTO，我最近一直在公司和家里同步vagrant box，现在直接用coding，就不需要同步了。</li>
</ol>
<p>需要找个方式，一天记一事才行。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20150906-weekly.html"/>
        <published>2015-09-05T16:00:00.000Z</published>
        <updated>2015-09-05T16:00:00.000Z</updated>
        <id>life/20150906-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>绿色：128枚，80%<br>橙色：024枚，13%<br>红色：012枚，06%<br>黄色：004枚，02%  </p>
<p>总计：168枚  </p>
<p>这就是我现在的生活，都在绿色的琐事中渡过了。</p>
<p>本周的3件糗事：</p>
<ol>
<li>开车导航去南宁东，结果导航到火车东。一路上看到了路标，但是还是跟着错误的导航走。这里有3个错误：</li>
</ol>
<ul>
<li>导航上本身就有说明，以实际的路标指示为准。在路上，请随时注意路标，发生偏差时要停下来确认；</li>
<li>导航设定后，要检查设定的线路；</li>
<li>在路上，对线路产生怀疑时，要立刻停下来检查。前面一辆开奔驰的早掉头了，我比别人多走了一倍的路才掉头；</li>
</ul>
<ol>
<li><p>做事要早做准备，拖延没有好处，相关的资料和物品也提前准备好，这样能节省时间。去取房子发票的，没有提前拿上相关材料，导致先去取钥匙，然后又返回去取资料，很累人。</p>
</li>
<li><p>本周搬了新住处，3户合租的，房子小客厅大，厨房乱糟糟，不能好好做饭了。</p>
</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[手游《神偷》设计分析]]></title>
        <link href="game-art/thief-game.html"/>
        <published>2015-02-14T16:00:00.000Z</published>
        <updated>2015-02-14T16:00:00.000Z</updated>
        <id>game-art/thief-game.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p><img src="res/thief.jpg" alt="game"></p>
<h2 id="it-is-simple">It is Simple</h2><p>The character is a black squre with eyes.<br>
It is a tap tap game, the character is controlled by tap. tap to jump, tap to change moving direction when the character touches the wall.</p>
<h2 id="charge1-player-39-s-design-are-variousness">Charge1: Player&#39;s Design are Variousness</h2><p>Every player get a room as secret base, they can enter other one&#39;s room to steal golds and ruby.<br>
You can buy the trap suit from mall and place the them to kill the invaders. different suit includes different traps, the amount of traps are restricted, you are allowed to use 1 suit at 1 time only.<br>
After you finish designing the room with traps, you must pass these traps 2 turns to prove that you don&#39;t obstruct the whole road, the others have the opportunity to steal something.</p>
<h2 id="charge2-steal-the-ruby">Charge2: Steal the Ruby</h2><p>When you steal others, you can use props to change the game be easier, such as character copies, slow time and break trap etc, these props are sell in mall.<br>
After you pass all traps and touch the ruby chest, you have opportunity to steal 1 ruby. the opportunity is decrease along with the times you die, so use props to reduce your death is good choice.<br>
In case you don&#39;t win the ruby, you can pay for rolling the dice again and again.</p>
<h2 id="charge3-ruby-combination">Charge3: Ruby Combination</h2><p>The game&#39;s goal is to combine better ruby, 2 ruby can combine to a better quality one.<br>
Ruby合成时需要消耗一定时间，这就留给其他人偷取ruby的机会。如果你不想合成中的宝石被偷掉，可以花钱立即完成合成进程。</p>
<h2 id="charge4-cloth-combination">Charge4: Cloth Combination</h2><p>角色的外观是通过材料合成的。材料只有4种，可以从商城购买。<br>
不直接从商城出售外观成品的原因，主要是可以在PVE中发放部分种类的材料。如果合成配方和角色等级相关，还可以促进玩家在每个等级段的外观消费。</p>
<h2 id="pvp-revenge">PVP: Revenge</h2><p>游戏的对抗是随机到某一个玩家的基地进行偷取，困难的陷阱会将入侵者杀死多次，这些杀伤数可以给基地增加收益。<br>
玩家会在上线后收到基地入侵通知，如果ruby被偷取，必然报复性的去偷取对方。假如通关后没有抽中仇人的ruby，由于愤怒和不甘必然消费进行多次抽取。</p>
<h2 id="game-pace">Game Pace</h2><p>为了控制玩家长时间的连续攻击他人，进入基地偷取前需要用手头的钥匙打开基地的锁。一扇门有很多把锁，玩家一定时间里只有有限的钥匙去试锁，因此玩家偷取次数就被控制了。<br>
基地的钥匙数量和门上的锁数量都可以通过升级基地提高。<br>
另外，低保设计，为了让死亡多次的玩家完成偷取，系统会禁用1个陷阱来降低关卡难度，保证不购买道具也可以通关。</p>
<h2 id="pve">PVE</h2><p>这里PVE特指不花RMB的功能点。<br>
基地中的陷阱是可以通过gold升级的，升级后会对死亡造成更多伤害，更快的降低别人抽到ruby的概率。<br>
地图上还有很多策划预设的关卡，通过这些预设关卡刷gold，来对基地进行升级。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Minimal UI Elements for Game]]></title>
        <link href="game-art/minimal-ui-elements.html"/>
        <published>2015-02-08T16:00:00.000Z</published>
        <updated>2015-02-08T16:00:00.000Z</updated>
        <id>game-art/minimal-ui-elements.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="elements-for-game">Elements for Game</h2><ol>
<li>Banner in first screen</li>
<li>Button frame</li>
<li>Window frame</li>
<li>Next and prev button</li>
<li>Normal icons: config, close, star, heart, chest, locker, gem, coin, pause</li>
<li>Progress bar</li>
<li>Choose level: normal and boss, lock and unlock</li>
<li>List frame</li>
<li>Grid frame</li>
<li>In game background and tiles.</li>
<li>Poster</li>
</ol>
<h2 id="first-screen">First Screen</h2><p>It is composed by 2 things.<br>
<strong>Background</strong></p>
<p>It can be the clean color or a drawing. You can translate the drawing repeatly.
<img src="min-ui/firstscreen1.jpg" alt="firstscreen"></p>
<p><strong>Title and Characters</strong></p>
<p>You can show the title with big font only. you can also add some game characters behind the title.
You can add some float animation to the characters.
Only 1 thing is dynamic in both background and title&#39;s elements.
<img src="min-ui/firstscreen2.jpg" alt="firstscreen">
<img src="min-ui/firstscreen3.jpg" alt="firstscreen"></p>
<h2 id="button-frame">Button Frame</h2><p>You can draw some delicate button, or just use a clean color box with shadow as your button, but remember it should be enlarged as a frame.</p>
<h2 id="window-frame">Window Frame</h2><p>Normal border and clean color inside the content area, or try more simple design without border.
<img src="min-ui/window1.jpg" alt="window"></p>
<h2 id="choose-level">Choose Level</h2><ul>
<li>A background which is simple drawing or clean gradient color</li>
<li>A title as <em>&#39;CHOOSE LEVEL&#39;</em></li>
<li>Level icons</li>
<li>Next and prev button to shift level page</li>
</ul>
<p>A simple design is showing 5x5 grids for levels of each section, each section use different background.
<img src="min-ui/chooselevel.jpg" alt="chooselevel"></p>
<h2 id="list-frame">List Frame</h2><ul>
<li>Title and description</li>
<li>Neighbor item must be distinct, you can make this by light/dark color or item border</li>
<li>Item left is icon</li>
<li>Item middle is title and description</li>
<li>Item right is an event button</li>
<li>If the count of items more than 1 page,  do not use vertical scroll, flip page by next and prev button</li>
</ul>
<p><img src="min-ui/listframe.jpg" alt="listframe"></p>
<h2 id="grid-frame">Grid Frame</h2><ul>
<li>Clean color as background</li>
<li>Title on top</li>
<li>Item icon and selected cursor</li>
<li>Show description on bottom when item is selected</li>
<li>Do not use vertical scroll, use flip page</li>
</ul>
<p><img src="min-ui/gridframe.jpg" alt="gridframe"></p>
<h2 id="in-game-background-and-tiles">In Game Background and Tiles</h2><ul>
<li>Background -1 is a static shade, as paint by brush with clean color, it don&#39;t contain any detail. or you can use a sky drawing by gradient color</li>
<li>Background 1 is the near sight, it move follow by character</li>
<li>It must need 2 small tiles and 1 big tiles at least, and shade them with 2 colors, then you get 4+2 tiles</li>
</ul>
<p><img src="min-ui/gamescn1.jpg" alt="scn1">
<img src="min-ui/gamescn2.jpg" alt="scn2"></p>
<h2 id="poster">Poster</h2><ul>
<li>Title</li>
<li>Banner</li>
<li>Description</li>
<li>Event button on bottom with different color background</li>
</ul>
<p><img src="min-ui/poster.jpg" alt="poster"></p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[angular.js 笔记]]></title>
        <link href="idea/angularjs.html"/>
        <published>2015-01-01T16:00:00.000Z</published>
        <updated>2015-01-01T16:00:00.000Z</updated>
        <id>idea/angularjs.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="页面和路由定义优先设计">页面和路由定义优先设计</h2><p>所有页面模板可以包含在一个文件中：<br></p>
<pre>&lt;script type=&quot;text/ng-template&quot; id=&quot;index.html&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/ng-template&quot; id=&quot;list.html&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/ng-template&quot; id=&quot;content.html&quot;&gt;&lt;/script&gt;</pre><p>使用路由系统需要导入ngRoute：<br></p>
<pre>app.config([&#39;$routeProvider&#39;, function($routeProvider){}]);</pre><p>当你的操作想跳转到别的地址时，使用 $location.path=。<br></p>
<h2 id="控制器和服务">控制器和服务</h2><p>理论上一个页面一个控制器。控制器里面定义模型数据值，可以直接渲染成页面结果，非常直接方便。<br></p>
<pre>app.controller(&#39;index_controller&#39;, function($scope){
    $scope.some_model = value;
});</pre><p>一般模型的数据来源都是服务器端，从服务器端请求数据的抽象包装成服务的样子。一些在多个控制器共享的全局数据也可以装进服务里。<br></p>
<pre>app.factory(&#39;some_svr&#39;, function(){});</pre><h2 id="常用指令和服务">常用指令和服务</h2><ol>
<li>ng-app</li>
<li>ng-init 初始化一些模型值，调试或者配置的时候用；</li>
<li>ng-repeat dom元素重复</li>
<li>ng-show/ng-hide</li>
<li>ng-class</li>
<li>ng-click 控件点击行为</li>
<li>ng-controller</li>
<li>$location</li>
<li>$http ajax接口</li>
<li>$timeout 定时器</li>
<li>$q 异步委托promise</li>
</ol>
<h2 id="单机测试">单机测试</h2><p>因为有promise，所以可以无服务器的时候用promise模拟服务器响应结果，做单机demo很方便。以后接入服务器只需要修改服务的内部代码，而不需要调整结构。<br></p>
<pre>var df = $q.defer();
df.notify(value); //通知用户更新状态
df.resolve(value); //通知用户委托正常结束
df.reject(value); //通知用户委托异常结束

var p = df.promise;
p.then(fn1, fn2, fn3);</pre><p>模拟的时候用$timeout延时后给调用者反馈结果。实际调用服务器接口的时候也可以通过promise将多个原子接口包装成为一个业务。</p>
]]>
        </content>
    </entry>
</feed>