<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Magic ABC</title>
    <link href="feed.xml" rel="self" />
    <link href="" />
    <id>feed.xml</id>
    <entry>
        <title type="html"><![CDATA[周记2016-07-16]]></title>
        <link href="life/20160716.html"/>
        <published>2016-07-16T00:00:00.000Z</published>
        <updated>2016-07-16T00:00:00.000Z</updated>
        <id>life/20160716.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="离职，钱">离职，钱</h2><p>我从桂行离职了，入职兴业。原因很简单，就是钱的问题和其他问题，不过都是无聊的问题。下周一就去上班做做点事情了。</p>
<p>这周一离职以后，就一直是闲置在家里，想不出做什么事情，所以周一还是去上班吧。关于这件事情，我也确实没有什么更多可以描述的了。</p>
<h2 id="数据存储迁移">数据存储迁移</h2><p>dropbox实在被搞得太卡了，说实话墙真是啥都干，连我这个域名也被墙了，呵呵，真不知道这个域名发表了什么奇怪的言论。</p>
<p>迁移的方式很简单，整理了一下，一些不是非常保密的资料，就放到百度云上了。至于保密资料，则用bit sync在手机和电脑之间同步好了。</p>
<h2 id="jenkins发布blog">Jenkins发布blog</h2><p>趁着迁移数据的机会，我就不再把blog存档在云存储上了，这次放到了git coding.net上，然后在服务器搭建Jenkins，轮询coding上的变更，如果有变更，则在本地更新下来，用nico build出来，并自动上传到github page。</p>
<p>部署Jenkins花费了好几个小时，不过这是值得的，以后我就直接在coding上写blog并存储，然后工具链会自动发布到github page。</p>
<p>对于一个软件包推广部署这件事情，Java确实做得比其他的好，毕竟一般依赖都打进包里了。python没有一个处理依赖关系的仓库吗？</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[电子电路开发之殇]]></title>
        <link href="idea/electron.html"/>
        <published>2016-06-18T00:00:00.000Z</published>
        <updated>2016-06-18T00:00:00.000Z</updated>
        <id>idea/electron.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="熟悉基本电路图">熟悉基本电路图</h2><p>三极管驱动，上拉电阻，去耦电容等等基本的元电路图应该知道，并且知道单片机的IO口无法做功率驱动。</p>
<h2 id="电焊手工能力">电焊手工能力</h2><p>一般都是焊接2.x mm的间距，抽风买了1.x mm的，没这个手艺去焊接，来一块毁一块。</p>
<h2 id="单片机接口协议">单片机接口协议</h2><p>GPIO是最基本的，但是还需要了解IIC,UART,SPI,PWM，ADC等等电路接口协议。如果单片机没有包含相关协议的硬件实现，还要能用GPIO实现，或者买相关的协议硬件模块。</p>
<h2 id="模块手册">模块手册</h2><p>光有单片机也就能玩玩灯，真要做点有用途的事情，其他模块是不能省的，比如温度、湿度、RF和电机等等。单片机和其他模块命令和数据通信，是基于上节所说的接口协议进行。</p>
<p>每个模块有自己的特性和命令，还有自己的模式，操作起来就要找手册读一读。</p>
<p>通信方法一般是命令字 + 设置值，目前硬件方面的操控还是通过读写寄存器进行的，属于逻辑电路范畴。</p>
<h2 id="开发调试">开发调试</h2><p>好了，现在基本的知识都有了，画画电路草图，买些面包线和面包板，连接单片机、模块和相关元件。然后在不怎么样的IDE上写程序，烧录到IC，运行。</p>
<p>呵呵，板子怎么不按套路出牌。这时候有几种可能：</p>
<ol>
<li>代码问题，可能协议信号不太对啊。怎么办，可能要来个逻辑分析仪。</li>
<li>模块问题，可能被静电烧了。怎么办？可能得多买几个换着测吧。如果是RF的模块，估计还要抓信号来看吧。</li>
<li>代码运行过程怎么查？打日志呗，通过串口看，另外别买裸板，买开发板带一堆灯和LCD也能展示个过程。</li>
</ol>
<h2 id="pcb产品">PCB产品</h2><p>终于电路也通了，程序也通了，想产品化做小点。如果少量的话可能手工做更便宜点，买来洞洞板和原件，然后焊锡一个个焊好。</p>
<p>如果想再小点，就要设计PCB了，这个我还没学，因为已经对整个流程很烦躁了。设计好了PCB，淘宝找商家打板就好了。</p>
<h2 id="你感兴趣你搞定了，成本高，能做什么呢？">你感兴趣你搞定了，成本高，能做什么呢？</h2><p>你有想法，要做点实用的东西，而不仅仅是点个灯测个PM2.5m，比如像我那样打算做个水阀控制，屋顶的水位电路好做，怎么开关电机呢？买个wifi插座也能应付过去，wifi插座的怎么获得信号呢？还有水阀的开关电子阀门，拆装也是有工程量的。</p>
<p>算一算下来，真实施一套完善的系统，硬件成本就是许多，虽然STC、STM便宜，但是具备基本通信功能的NodeMCU售价20￥。另外设计上还要考虑停电、停网等预案。玩具是没有意义的，但是做得完善又各种成本太高。</p>
<p>也就是工厂搞无人车间，电气自动化，做单片机有价值，还有所谓的无线通信领域，这也是偏硬多一些。</p>
<p>至于现在的家庭智能硬件，只会搞搞万能遥控器，wifi开关。真正的家庭智能电器环境，应该是有大主机检测各个传感器状态，并根据客户的作息习惯，自动进行舒适、安全等方面的控制。现在这种什么硬件都wifi到云，通过手机操作和简单定时的方式真是太玩具了。并且各家都极其封闭，根本没有API方便第三方进行大主机的开发。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[世界观]]></title>
        <link href="idea/worldview.html"/>
        <published>2016-06-17T00:00:00.000Z</published>
        <updated>2016-06-17T00:00:00.000Z</updated>
        <id>idea/worldview.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p><img src="http://i.imgur.com/AlF0N6k.png" alt="worldview"></p>
<p>四项工作领域，择一而入即可。要有好的收入，必须选时间杠杆高的，并且具备规模化效应。</p>
<p>好好的思考与等待吧。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Excel 整合报表]]></title>
        <link href="idea/excel-join.html"/>
        <published>2016-05-08T00:00:00.000Z</published>
        <updated>2016-05-08T00:00:00.000Z</updated>
        <id>idea/excel-join.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>我们常常需要从日志，数据库中取大量的数，这些记录常常是离散的，但业务需要将他们根据关键字合并，这项任务都有哪些做法呢？</p>
<ol>
<li>SQL join，不是一直都有这样的机会。</li>
<li>join，bash 的 join 命令。</li>
<li>写一段python 处理。</li>
<li>Excel处理。</li>
</ol>
<p>join操作或者join命令只能处理比较理想的情形，比如当join key缺失的时候，比如需要从多个key到不同列的尝试匹配。</p>
<p>在整合报表的时候，是一个反复尝试、预览的过程，这个时候命令行需要重复调整参数，并不比GUI更高效，不好调试，也容易遗漏。</p>
<p>Python是万能的，若每次遇到问题都从open,readline,split开始，不停的针对业务写脚本，并逐步抽取成一套工具集，为什么不直接 <strong>Find One</strong> 呢。</p>
<h2 id="excel很棒">Excel很棒</h2><p>Excel是非常棒的工具，除非要处理的是一个超大的表格。</p>
<p>Excel用于整合报表的函数主要是 <code>VLOOKUP</code> <code>LOOKUP</code>，且听我一一道来。</p>
<p>首先，我们的案例是sheet1 和 sheet2 通过 sheet3 连接，说人话大概是<strong>表1</strong>有关键字K1，数据KX，KY，<strong>表2</strong>有关键字K2，数据KX，KY，<strong>表3</strong>有K1、K2的关系。在这里通过K1,K2,KX,KY都不一定能在sheet1找到sheet2的对应。</p>
<p>以上是我之前处理的一个问题的简化，已经算复杂到不想用join了吧，每次写脚本呢又觉得很麻烦，其实看似问题清晰，但写程序的工作非常繁琐，涉及到搜索资料，调试排错，重构等等时间开销，一次性的开发，性价比并不高。</p>
<p>首先，在sheet1表通过<code>VLOOKUP</code>在sheet3查找K2：</p>
<pre>=VLOOKUP(K1, sheet3, index for K2)</pre><p>查找后，发现有些结果是<code>N/A</code>，这就需要在sheet1借助KX, KY，在sheet2查找K2：</p>
<pre>=VLOOKUP(KX, sheet2, index for K2)
=VLOOKUP(KY, sheet2, index for K2)</pre><p>sheet1新增的三列查找结果，都包含一些<code>N/A</code>，但所幸总算保证每条记录都找到K2。为了把sheet2的数据搬到sheet1的对应位置，现在要想办法把每条记录的<code>N/A</code>，空值，K2合并到一起。这里用到了<code>LOOKUP</code></p>
<h3 id="tricky">tricky</h3><pre>=LOOKUP(1, 1/(X1:Z1&lt;&gt;&quot;&quot;), X1:Z1)</pre><p>括号里的不等判断返回TRUE,FALSE，所以返回的就是1或者除0，自然能找到结果。</p>
<p>准确求出K2以后，将sheet2的数据取过来很简单，还是用<code>VLOOKUP</code>，只不过这次是横向填充，因此需要准备一个sheet4用于index递增。另外第一个参数的列位置要锁定，行值则不用。</p>
<pre>=VLOOKUP($L2,Sheet2!$A$2:$Q$412,Sheet6!A$1,FALSE)</pre>]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[百度助纣为虐]]></title>
        <link href="idea/baidu-sucks.html"/>
        <published>2016-05-02T00:00:00.000Z</published>
        <updated>2016-05-02T00:00:00.000Z</updated>
        <id>idea/baidu-sucks.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>最近百度又因为良心问题上头条了，当然由于这个企业不认为自己良心有问题，所以类似的事情已经重复过很多次了，而且这一届的人民也很健忘。</p>
<p><a href="http://money.163.com/16/0501/19/BM0KPGJO00253B0H.html">http://money.163.com/16/0501/19/BM0KPGJO00253B0H.html</a></p>
<p>要客观的讨论百度，须要先撇开事件讨论对百度的看法。我认为，百度搜索结果非常垃圾，稍微专业一些的搜索关键字，给出的搜索结果多数是些错误的链接。但是搜索娱乐内容视频、小说、音乐倒是精准和方便，以前不讲版权的时代甚至公然侵权。</p>
<p>回到事件本身，如果要控告百度一项罪行的话，我认为，应该是，百度以主动意愿向用户呈现欺诈链接的搜索结果，依据是相关的欺诈搜索结果均呈现在第一搜索结果页的前几条中，有的链接设置加蓝V，并且有一定证据表明欺诈网站的广告主向百度支付了高额的广告费。</p>
<p>当然，有人不是这个观点，他并不认为百度此行为有任何错误，理由是百度向用户提供免费的搜索服务，并无义务向用户呈现最佳的结果，并有权处置链接在搜索结果页上的显示位置。</p>
<p>我并不反对这个观点，因为观点本身是合理的。但是百度行为失格的地方在于，他是一个社会基础广泛的服务，就像一个非常好用的指南针（实际上不好用，但对赵国多数人已经足够，并且这一届人民也没有太多选择），用户众多，但是却将指针故意指向广告主所要求的任意方向，使得用户落入欺诈的圈套。</p>
<p>在没有搜索引擎的前提下，欺诈网站想要精确的暴露在用户面前是困难的，而百度则将这种困难抹平，并且没有采取任何措施，甚至于收到广告费后将他们呈现到用户的搜索结果第一页的前几条中，这可不可以说是助纣为虐呢。</p>
<p>如果看到罪行只是旁观，那有可能是因为阻止有危险，沉默是合理的。但若是看到罪行影响的不够大，还客观而中立的推波助澜，那就太可怕了。</p>
<p>不过作恶的人不必害怕，没有遭天谴这种事。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[我眼中未来的趋势]]></title>
        <link href="idea/thefuture.html"/>
        <published>2016-03-19T00:00:00.000Z</published>
        <updated>2016-03-19T00:00:00.000Z</updated>
        <id>idea/thefuture.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>技术在加速，了解未来的可能性，才能立足在正确的方向上。这个时代的人都说，“我不想逆流而上，我只想找到一块山顶的石头，轻轻一脚”。</p>
<ul>
<li>所有的电器，机械全面联网，通过WiFi，RF射频的手段，也就是所谓的物联网。物联网只是全面联网的一个子集。联网的设备全部可以远程监控，编程控制，实现弱智能，提供人性化的服务。传感器会更加丰富，更加精确，更加集成。</li>
</ul>
<hr>
<ul>
<li>各行业使用大数据挖掘更加普遍，分类、聚类、关联是基本的手段，人类不断被分类和标签化，任何时候都能找到精准的群体。群体的属性没有隐私，离群者被风控重点关注。</li>
</ul>
<hr>
<ul>
<li>更多的互联网公司提供小微金融服务，从生活消费到大件消费，均以信用作为支付手段，信贷货币总量再次膨胀，股市会有一波上涨。</li>
</ul>
<hr>
<ul>
<li>更多的中小企业会采用相关领域的SAAS来提升自身的流程规范。一方面原因是开发者增多，所以能为更多的领域提供软件服务，另一方面则是软件的开发成本不断下降，中小企业可以负担采购成本。</li>
</ul>
<hr>
<ul>
<li>机械臂将大量取代体力劳动，重复的脑力劳动也渐渐被软件取代。</li>
</ul>
<hr>
<ul>
<li><p>未来是租用的时代（KK），比如Uber，Airbnb，使用物品的唯一方式不在是占有，而是可以租借。</p>
</li>
<li><p>VR的时代（KK），眼镜或者头戴设备，将真实与虚拟结合。我并不觉得VR会带来多大的改变，因为VR本质是一种输入输出方式，随着技术进步已有的屏幕式的输入输出手段会更加普遍更加成熟，对于大量复杂的操作环境来说，VR是无法涵盖所有情景的。VR比较有用的一个地方就是训练，但实际上也不一定是最合适的方案。</p>
</li>
</ul>
<hr>
<ul>
<li>人工智能？最近Alphago是很火，但是下棋只是一种简单的计算策略，现阶段的人工智能距离存在认知概念这件事情还很遥远，他们能根据图片推断出一只猫，但猫是什么对他们是没有认知的。他们可以通过积累的规范数据，挖掘你的习惯，更准确的为你提供已知的服务，但是他们无法创造出更多。</li>
</ul>
<p>自主思考是一件很神奇的事情，即使通过神经网络创造出未知的多样性，没有和人类一样的认知的智能是十分危险的，就跟无任何道德意识的高智商犯罪一样，可能做出危险的事情。</p>
<hr>
<p>这就是我眼中未来的趋势，他们都是科技上的趋势，我希望这些更发达的科技，能够推动社会和政治上的进步。虽然我们现在有更多更容易的渠道暴露黑暗，但是爪牙还很厉害，爪牙还在为经济原因而服从。但愿技术推动生产力的发展，使社会觉醒。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[如何才能坚持写日记]]></title>
        <link href="idea/insist-on-writing.html"/>
        <published>2016-03-18T00:00:00.000Z</published>
        <updated>2016-03-18T00:00:00.000Z</updated>
        <id>idea/insist-on-writing.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>俗话说的好，做事贵在坚持，学习如此，起床如此，写日记也是如此。</p>
<p>小学的事情我忘了，但中学我是写日记的，大体内容是记录新的世界观感想，叙述邻桌那位女同学。我一共写了好几本，直到有一天父母翻看了我的日记，我一把火就把它们都烧了，后来再也没有写过日记。上大学后，由于学技术的原因，写了好长一段时间的技术博客，学习感悟多的时候，几乎是周周发。渐渐的随着技术能力的积累，达到一个收益下降的边际，就很少发文了。</p>
<p>这一中断就是好长时间，中间也有过搭建新博客，但都是发了几篇后就再也写不出来，博客也删掉了。我的最后一个blog就是github，文章就在git repo，无处不在，不再像过去那样文章只留档在博客平台的数据库中，无法自己存留一份。为了珍惜这难得的写作机会，我又重新想起了写日记。</p>
<p>一开始我是用格志app做每天的记录，一周汇总一次，发周记到博客。持续了三个月，我又中断了。我坚持不下去除了懒，还有欲望。我没有在这个4英寸的屏幕上敲字的欲望，我没有只能敲字的欲望，我有时候需要其他的表达方式。用app写日记这个事情，没有美感。</p>
<p>在电脑上写日记我也有考虑过，觉得不习惯，肯定坚持不下去。它不能随时记录，要打开电脑等待开机，敲键盘影响思维漫游，电脑天然的多任务干扰，想按自己的样式进行书写的话成本也比较高。</p>
<p>就这样，我停了三个月，养精蓄锐，然后我买了一个日记本，铁环、16开到32开之间，细长细长。我又开始写日记了，手写。我随意的记录，一段文字，或者是一份清单，或者一份结构图，自由发挥。我买小笔记本，是怕页太大，留空太多，影响坚持的力量。每一本日记，都应该是越容易写完越有成就感，更容易坚持。我坚持下来了，并总结出一些让这事更容易的一些点：</p>
<ul>
<li>买小笔记本，越小越薄，越容易写完，接着买第二本漂亮的</li>
<li>打开左页右页的共同面，两页只能写一天的内容。或者只写右页，左页留白</li>
<li>行间距要大，文字写在两行的中间线上，可以更快的写满一页</li>
<li>除了生活，学习和工作都可以写，不限定只写文字，各种相关结构图都可以画，当成笔记，手帐</li>
<li>可以往页面上贴东西，图，照片，标签，任何当天相关的东西</li>
<li>几根彩带，做书签用</li>
</ul>
<p>为了坚持写日记而如此费心思，所为的也是记录，鞭策和努力。记录你的所见所闻，记录你今天所学，记录你的目标，记录你的思考，记录你的行动，然后回顾，总结，发blog。只有留下文字的人生，能够被重新读起，才没有白活。</p>
<p>下篇：我看到的未来的趋势</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记2016]]></title>
        <link href="life/2016new.html"/>
        <published>2016-01-02T00:00:00.000Z</published>
        <updated>2016-01-02T00:00:00.000Z</updated>
        <id>life/2016new.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>有一阵子没发周记了，其实都有用软件每日小记一下，虽然不够连续。</p>
<p>发生了一些事情，有好事有坏事。</p>
<p>1221领证了，终于摆脱无证驾驶的问题，嘿嘿。今后的路依旧很长，继续努力。</p>
<p>终于花时间去了解webbuilder，可以全代码做应用，并且复用服务器和客户端的代码了。</p>
<p>老婆没能在广电转正，小地方IT落后，不是很看好女性做这个啊。不过塞翁失马焉知非福，可以去换一个喜欢的方向更好。</p>
<p>zb查出了cancer，积极治疗中，愿大家健康。</p>
<p>月底假装参加了年结，不负责什么，就是去吃吃火锅，然后领红包回去睡觉。</p>
<h2 id="新一年计划">新一年计划</h2><p>我的时空，可能依旧还无法发散到乐趣上，继续集中在增强技能和增加财富方面。</p>
<p>以下几个途径：</p>
<ol>
<li>增强套利方式的理解，抓住套利机会。意味着多阅读，但是也要沉住气，控制好子弹是关键，不要弹到用时方恨少。</li>
<li>外包项目，可以做一些，收入也还可以。</li>
<li>深入做一个系统，真有用的系统永远可以卖出很多钱，互联网那些浅薄的随便都能山寨出来的项目就算了。</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记1206]]></title>
        <link href="life/20151206-weekly.html"/>
        <published>2015-12-06T00:00:00.000Z</published>
        <updated>2015-12-06T00:00:00.000Z</updated>
        <id>life/20151206-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="时间">时间</h2><p>Yellow, 34 coins, 低于50 coins每周。最近是需要多努力一点。</p>
<h2 id="记事">记事</h2><ol>
<li><p>hbuilder云编译的应用有问题，无法装到4.4虚拟机，不得已自己下了一套sdk本地编译。</p>
</li>
<li><p>软件中级资格证拿到手了，太easy。</p>
</li>
<li><p>redis是好东西啊，订阅模式和有序队列。准备再看看zookeeper。</p>
</li>
<li><p>纪念碑谷限免，通过，确实是神一般的游戏。
<img src="/life/pic/jnbg1.png" alt="game1">
<img src="/life/pic/jnbg2.png" alt="game2"></p>
</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记1123]]></title>
        <link href="life/20151122-weekly.html"/>
        <published>2015-11-22T00:00:00.000Z</published>
        <updated>2015-11-22T00:00:00.000Z</updated>
        <id>life/20151122-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="时间">时间</h2><p>Yellow 40<br>Orange 20  </p>
<p>这周事情做的不多啊。</p>
<h2 id="事件">事件</h2><p>负责需求的人必须会做原型，方能降低沟通成本和返工工作量。</p>
<p>公司要求调档，去咨询一下，我的档案还在大学生就业中心，不在人才中心，无法办理转正定级，最坏的情况就是丢掉几年工龄。</p>
<p>每周出差去桂林，其实蛮无聊的，真是一份无聊的工作啊。</p>
<p>订单表还是要记录一些产品冗余信息的，为了显示和快照。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[rails小项目的一些分享]]></title>
        <link href="idea/rails-exp.html"/>
        <published>2015-11-16T00:00:00.000Z</published>
        <updated>2015-11-16T00:00:00.000Z</updated>
        <id>idea/rails-exp.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>为了满足自己炒股兴趣的需要，根据<a href="http://www.amazon.com/Little-Book-Still-Beats-Market/dp/0470624159">《神奇公式》</a>，对A股市场做了一个排序系统，既完成了一个对自己有效的需求，也从中学习rails。</p>
<p><strong>Source</strong> : <a href="https://coding.net/u/hwh008/p/mss/git">https://coding.net/u/hwh008/p/mss/git</a></p>
<p><strong>Site</strong> : <a href="http://www.magica.me">http://www.magica.me</a></p>
<h2 id="爬虫">爬虫</h2><p>股票的财务数据都是从sina抓的，所以<a href="http://www.nokogiri.org/">Nokogiri</a>是首选，有了他，做点基础的爬虫实在太容易了。</p>
<p>用whenever每天定点去爬一下收盘价，顺便检测一些需要更新财务数据的股票。</p>
<pre>StockInfo.tick_sheet</pre><h2 id="缓存">缓存</h2><p>我有一个很耗时的model函数，也就是对所有股票进行排序的公式实现：</p>
<pre>StockSheet.calc_better_cheap</pre><p>我希望这个公式的结果页面显示后，可以重用这个页面，不要重新计算排序，因此我尝试了action cache和fragment cache，然而并没有什么卵用，因为这两种cache都还是要执行controller#action的，费时的函数调用恰好放在action中。我可以把这个调用放到view里，这样就解决了问题，但是又涉及到请求参数变化的问题，而且这串调用放到view里也带来了限制，不方便在action里对数据做更多的修饰。  </p>
<p>另外，我也搞不清楚fragment cache的实现机制和最佳实践。</p>
<p>经过搜索我找到了<a href="https://github.com/qor/qor_cache">qor_cache</a>，还是国人的优秀作品，有3点好处：</p>
<ol>
<li>针对Model函数结果的cache，正好我就是model函数耗时多。</li>
<li>qor_cache wrap了我指定的函数，使得我的代码对这个gem没有依赖，可以轻易的从config中删掉qor_cache。</li>
<li>以接口的方式告诉我一条cache的最佳实践：<blockquote>
<p>The cache key is the fluid part and the cache content is the fixed part. A given key should always return the same content. You never update the content after it’s been written and you never try to expire it either.</p>
</blockquote>
</li>
</ol>
<pre>cache_key &#39;stock_update&#39; do
    StockInfo.first.updated_at
end

scope :stock_sheet do
    cache_class_method :calc_better_cheap, &#39;stock_update&#39;
end</pre><p>函数的输入参数是一个hash obj，qor_cache将参数作为cache key的一部分，但是这个hash obj中，其实有些key并不影响cache，因此我根据qor_cache做了一个hack：</p>
<pre>hash_obj.instance_eval do
        # 为了优化qor cache，不是每个选项都影响cache key
        def inspect
            %Q(inspect redefine:#{self[&quot;mktcap_min&quot;]},#{self[&quot;mktcap_max&quot;]})
        end
        self
    end</pre><h2 id="翻页">翻页</h2><p>我没有使用will_paginate，因为will_paginate只包装relation对象，但我要做的是对数据进行排序计算，已经将数据全部都取出来了，因此找了一个支持page array的gem：<a href="https://github.com/amatsuda/kaminari">kaminari</a>，听这名字像日本人写的gem。</p>
<pre>  def better_cheap
    stocks = Kaminari.paginate_array StockSheet.calc_better_cheap(calc_params)
    @stocks_page = stocks.page(params.fetch(:page, 1)).per 100
  end</pre><h2 id="函数式fp">函数式FP</h2><p>函数式编程其实就是好看，可以把对集合的一连串操作都写在一行里，长长的。</p>
<p>神奇公式的排序算法就是，将集合所有元素根据指标A排序，取排序顺序为分数A，再根据指标B排序，取排序顺序为分数B，根据分数AB之和再排序。写到一行里是这样的：</p>
<pre>def self.calc_better_cheap(opt)
    available(opt).sort { |a, b| a.better_v &lt;=&gt; b.better_v }.reverse.map.with_index(1) { |el, i| el.better_ord = i ; el}.sort { |a,b| a.cheap_v &lt;=&gt; b.cheap_v }.reverse.map.with_index(1) { |el, i| el.cheap_ord = i; el}.sort { |a,b| a.bc_value &lt;=&gt; b.bc_value }
  end</pre><h2 id="nginx-passenger">nginx + passenger</h2><p>生产部署用的是passenger，很简单，安装就好了。就是环境变量遇上了一些问题，后来通过dotenv-rails解决。</p>
<h2 id="helper让view漂亮">Helper让View漂亮</h2><p>有两种不漂亮的写法，一种是在view里写表达式，另一种是在action里把表达式算好的结果放到instance var。</p>
<p>不过erb模版对Helper的支持还是不够漂亮，我比较倾向的是那种管道式的，这样可以把一串helper像羊肉串一样串起来。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20151116-weekly.html"/>
        <published>2015-11-16T00:00:00.000Z</published>
        <updated>2015-11-16T00:00:00.000Z</updated>
        <id>life/20151116-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="统计">统计</h2><p>橙色：22枚<br>黄色：54枚<br>蓝色：32枚  </p>
<p>周末实在太懒散了，什么都没有做。</p>
<h2 id="本周要事">本周要事</h2><ul>
<li>怕冷，容易感冒</li>
<li>在处理档案和贷款合同的事情上，容易犯拖延症，怕与人接触。不过据说积极性和注意力一样是一种每日有限资源，如果在一件事情上投入多了，别的事情就会需要反方向的补充。</li>
<li>唉</li>
</ul>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记1111]]></title>
        <link href="life/20151111-weekly.html"/>
        <published>2015-11-11T00:00:00.000Z</published>
        <updated>2015-11-11T00:00:00.000Z</updated>
        <id>life/20151111-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>橙色：42枚<br>黄色：31枚<br>蓝色：08枚<br>红色：02枚  </p>
<p>奖励31/4 - 2/2 = 6枚</p>
<p>这两周的量都不是很足够，因为工作的活儿有点多。</p>
<h2 id="本周要事">本周要事</h2><ul>
<li><p>房贷办理下来，开始要还了，每个月2800，有点不爽，出钱总是不爽的。</p>
</li>
<li><p>做了点马尔代夫的调研，找到一个选岛工具。一般两人预算也就3w多吧，想玩浮潜和水屋，我喜欢无边泳池啊。</p>
</li>
<li><p>股票的网站上线了，域名也申请下来，还是很有意思的，<a href="http://www.magica.me">筹码游戏</a>。我的个人博客也放在这个二级域名下了，<a href="http://blog.magica.me">MAGICABC</a>。</p>
</li>
<li><p>古摄影想来消除老婆写的差评，最后不得不计划重拍3套，其实我对重拍真是没什么兴趣了，但是他们又不肯赔钱，磨磨唧唧的最后出卖了自己。</p>
</li>
<li><p>以10元价格蹭了联通的2G流量，又一阵子无忧啦。</p>
</li>
</ul>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20151101-weekly.html"/>
        <published>2015-11-01T00:00:00.000Z</published>
        <updated>2015-11-01T00:00:00.000Z</updated>
        <id>life/20151101-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>黄色：040枚<br>橙色：040枚  </p>
<p>没有达标50枚标准，因为周末感冒严重了，现在还是不停打喷嚏，不舒服啊。</p>
<h2 id="本周记事">本周记事</h2><p>Vuejs发布1.0版本，本来打算升级，阅读更新公告后发现只是增加了一些语法简写以及控件子事件指令，我模仿着写一个指令，并不升级。</p>
<p>做app用HBuilder，真是好东西不用愁，可以在win打包apk发布，还可以发布到iphone真机调试，指令也比较全面，真是好用的没话说。</p>
<p>周五想挑周边玩玩，结果发现除了桂林，其他景点真是又小又难看，毫无可看的。其实桂林也真是超级low的，皮条客满街都是。</p>
<p>在sprint+jsp环境下尝试web服务端开发的最佳实践，也就是template,layout,helper这些东西，用jsp的simple tag完成的。虽然也做到了，不过总是要带入taglib也真是相当不方便。</p>
<p>周末走了走青秀山，阴天偶尔小雨，看看各种植物还是非常不错的。</p>
<p>基于rails的股票神奇公式计算项目<a href="https://coding.net/u/hwh008/p/mss/git">MSS</a>，第一阶段完成啦。第一阶段做的就是抓股价和财报数据，按神奇公式计算排名和安全值。准备开始第二阶段，抓相应的财务指标走势数据，用分类器进行分类，并给出买入建议。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20151026-weekly.html"/>
        <published>2015-10-26T00:00:00.000Z</published>
        <updated>2015-10-26T00:00:00.000Z</updated>
        <id>life/20151026-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>绿色：100枚<br>黄色：050枚<br>橙色：030枚<br>红色：006枚  </p>
<p>经过几周的记录，基本可以明确一周大概200枚金币。时间如金钱，用一枚少一枚。其中绿色布局在100枚出头，不再另计。主要登记黄橙红蓝，黄色能保持在50枚以上是情况比较好的情形了，再往上努力则更加辛苦。红色应保持在10枚以下，橙色不使用的时候则是向黄色进行补充。</p>
<blockquote>
<p>人生苦短，2/3的时间用在吃，睡，聊上面，约1/6用在有意义的事情上，1/6用在挣生活费上。</p>
</blockquote>
<h2 id="本周要事">本周要事</h2><ol>
<li><p>小领导的白事，第一次听说白事也给份子钱，给了。</p>
</li>
<li><p>拿到项目首付款，啧啧，真是突然挣了一下。</p>
</li>
<li><p>周六跟LP闹矛盾了，嗯，有我的不对。做人还是容易苛刻啊，可是又不甘心一起拉低水平线。</p>
</li>
<li><p>这个月市场还是猜的挺准的，利用A类和创业板ETF反复对冲，喝了点汤水。</p>
</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[选择前端框架的想法]]></title>
        <link href="idea/vuejs.html"/>
        <published>2015-10-26T00:00:00.000Z</published>
        <updated>2015-10-26T00:00:00.000Z</updated>
        <id>idea/vuejs.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="我接触过的阶段">我接触过的阶段</h2><p>应该是从jquery+div开始第一次接触的，那时候整个前端对非这个方向的人还是很麻烦的，css和布局都不会调整，即使会写脚本随意的操作dom，写出来的界面也是丑陋无比。这个时代想要个好看的动态控件都是靠找javascript库。</p>
<p>第二个阶段是bootstrap，总算有一个不用靠设计师也能做出对齐标准的css框架了，而且学起来还不难。随后一大片bootstrap like的小网站就纷纷冒出来了，以及更多的css框架也发布出来。虽然一时间也审美疲劳，但是不可否认这种css框架解决了基本的控件样式和对齐问题。</p>
<p>第三个阶段应该是ember,backbone这种库吧，我没有参与到这个阶段，但感觉上这应该是SPA，rich client的一个过渡阶段。这个阶段的库包含了model,view,controller,router,store等元素，整个就是一个rails的客户端化。这样一个发展方向有些偏激了，库的学习成本高，并且很难和别的库，框架兼容，所以我认为这是一个过渡阶段。</p>
<p>第四个阶段就是现在，以reactjs,angularjs为代表的组件化和数据绑定阶段。这个阶段基本上屏蔽了dom操作，使得页面标签更具语意和功能，可读性和可维护性都更高。这个阶段的关键技术是指令，filter,组件。</p>
<h2 id="在组件化和数据绑定时代下的选择">在组件化和数据绑定时代下的选择</h2><p>这是一个比以前都好的时代，从技术上说，各种表现技术越来越完善，门槛越来越低。</p>
<p>组件化和数据绑定为基础，并以指令和filter相配合，在客户端的model,view层面已经是威力倍增。我认为目前的技术条件下，前端的开发结构以VM(view,model)为一个聚集，styling,router为另一个聚集是合适的。</p>
<p>styling就是各种css框架，从bootstrap开始，无数的后起之秀，带来了丰富的基本控件和页面结构，以及多种的终端适配，PC的，HTML5的，hybrid app的。特别是介入SPA的内页切换后，内置的router和基本的约定规则势在必行。</p>
<p>另一块则是view,model，view负责渲染模版，model负责向模版提供数据。特别是数据绑定的概念普及以后，操作dom渐渐被视为异类，这两块已经没有必要再拆分了。view在渲染模版方面则出现了自定义组件的引擎，并配合指令和filter，极大的拓展的页面代码的复用和可理解性。</p>
<p>基于这一看法，ember等全面的MVC router大框架逐渐淘汰也是必然。大家其实要的是更好的组装性和组件性，而不是在一棵树上吊死。</p>
<p>在VM库上，除了代表者reactjs和angularjs，还有很多后起之秀，如Vue.js。angularjs我看过，用内置的指令还简单，自己开发新指令文档描述的令人发指。reactjs也看了，我实在不喜欢把组件和代码都写到script标签下。最后选定的还是Vue.js，数据绑定简单明了，新建组件、指令和filter也都是一句话的事情。</p>
<p>至于Vue.js这样的VM库是否适应所有的web项目，我还是觉得这要考虑项目想做成什么样子，以及server端框架的完善性。如server端是rails，多数情况是没必要用VM库的。但是若开发一个SPA，从服务端取json，那一个适合的css框架和VM库，会让工作事半功倍。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20151019-weekly.html"/>
        <published>2015-10-19T00:00:00.000Z</published>
        <updated>2015-10-19T00:00:00.000Z</updated>
        <id>life/20151019-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p><strong> 摆酒过门 </strong></p>
<p>10月9日办的，中午12点才磕的头，急急忙忙的1点才开始，几乎没有迎宾。等每桌敬酒客人就已经吃饱要走了。<br>当天的安排上现在想想还是有些遗憾的，但是新生活在继续中又开始了。</p>
<p><strong> 本周其他要事 </strong></p>
<ol>
<li><p>在桂林吃了份辣椒炒粉，第二天拉了3次。。。。这食物的毒性甚过北京。</p>
</li>
<li><p>琅琊榜电视剧看完了，也是沉迷了几日。</p>
</li>
<li><p>桂林银行是不是有什么人得罪桂林网安了，一直被死咬不放，现在又拿流程不规范说事，暂时关闭了。</p>
</li>
<li><p>ios升级9.0.2，然后卡就不能用，没信号了。直到上周末找人修理，发现是我以前剪的大卡出问题了，去营业厅换张小卡就好了。<br>还以为要跟北京彻底告别呢，手机号还是北京的。</p>
</li>
<li><p>重仓大量分级A，一支股票都没有，就等着股市临时下跌呢。</p>
</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20150929-weekly.html"/>
        <published>2015-09-28T00:00:00.000Z</published>
        <updated>2015-09-28T00:00:00.000Z</updated>
        <id>life/20150929-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>绿色：140，67%<br>橙色：032，15%<br>黄色：028，13%<br>红色：009，04%  </p>
<p>总计：209<br>奖励：28/4 - 9/2 = 2.5 (一个半小时)</p>
<p><strong>本周要事</strong></p>
<ol>
<li><p>去兴业的事情黄了，也没怎么可惜，毕竟不想分居</p>
</li>
<li><p>电商被检测出重置任意用户密码的漏洞，原始的原因竟然是开发公司愚蠢的两次请求的接口写法，框架落后坑自己啊</p>
</li>
<li><p>看小说容易沉迷当前的情节，浪费时间</p>
</li>
</ol>
<p>看来本周没有发生积极的事情，遗憾。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20150921-weekly.html"/>
        <published>2015-09-21T00:00:00.000Z</published>
        <updated>2015-09-21T00:00:00.000Z</updated>
        <id>life/20150921-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>绿色: 119, 55.5%<br>黄色：055, 25.5%<br>蓝色：016, 7%<br>橙色：013, 6%<br>红色：003, 1.5%  </p>
<p>总计：206</p>
<p>本周发生的事情：</p>
<ol>
<li><p>下载了rails guide的git，在火车路上进行阅读，拓展了学习时间。</p>
</li>
<li><p>古摄影的产品很垃圾，完全没有后期，我妹子被迫自己成为了PS大神。现在承接婚纱照、写真照精修，100一张，满意为止。</p>
</li>
<li><p>周五少挣了1K，从中学到，止赢比止损更有本事，犹豫有风险。</p>
</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[周记]]></title>
        <link href="life/20150913-weekly.html"/>
        <published>2015-09-13T00:00:00.000Z</published>
        <updated>2015-09-13T00:00:00.000Z</updated>
        <id>life/20150913-weekly.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>绿色：100枚，46%<br>黄色：072枚，33%<br>橙色：026枚，12%<br>蓝色：011枚，5%<br>红色：008枚  </p>
<p>总计：209枚</p>
<p>有进步，黄色时间大量增加了，绿色的和橙色的这两周都差不多。<br>(黄色/4 - 红色/2) 努力产生的奖励时间是必须的，不然这个游戏就没有积极性。</p>
<p>本周发生的事情：</p>
<ol>
<li>hyc找我做个印刷系统的订单管理项目。调研中发现了nativescript，做原生app是好物。reactjs现在还不支持android。</li>
<li>配了新眼镜，拿到验光数据，视力不过度使用的话，已经不会有什么太大变动了。以后可以凭借这份验光数据在x宝多配几副在几个地方备用。</li>
<li>发现厉害的大学同班孙胖子是现在coding.net的CTO，我最近一直在公司和家里同步vagrant box，现在直接用coding，就不需要同步了。</li>
</ol>
<p>需要找个方式，一天记一事才行。</p>
]]>
        </content>
    </entry>
</feed>