<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>叫我abc</title>
    <link href="./" rel="self" />
    <link href="./" />
    <id>./</id>
    <entry>
        <title type="html"><![CDATA[unity4.3的2d技术要点]]></title>
        <link href="game-art/unity4.3.html"/>
        <published>2013-12-08T16:00:00.000Z</published>
        <updated>2013-12-08T16:00:00.000Z</updated>
        <id>game-art/unity4.3.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>unity4.3的2d，是在3d中用正交投影实现的。投影不是重点，重点是增加了2d的物理组件，提供2d的碰撞和物理支持。</p>
<h2 id="场景分层">场景分层</h2><p>2d的场景构建讲究分层，不同的对象分布到不同的层中，方便管理。</p>
<p>一般说来分5层</p>
<ol>
<li>静态背景层。静态的远景，然后云，水，雾气等可以做一个缓慢的循环动画。</li>
<li>动态背景子物体。飞鸟，小动物，小植物等偶尔出现的对象，但是不和游戏交互。</li>
<li>静态前景层。和游戏发生实际交互的地面，墙和物体，是实际的关卡内容。这些物体一般要设定碰撞多边形和物理材质。</li>
<li>游戏对象层。玩家，怪物等活物。</li>
<li>UI层。界面和粒子等。</li>
</ol>
<p>要快速做原型，主要是集中力量做操作逻辑，前景层，游戏对象逻辑和粒子表现。</p>
<h2 id="动画技术">动画技术</h2><p><strong>骨骼动画编辑器</strong></p>
<p>unity4.3内置了2d骨骼动画编辑器，所谓骨骼动画就是子部件的移动缩放和旋转。内置的编辑器可以所见即所得的编辑角色的各种动画。</p>
<p>原始的精灵动画，也作为骨骼动画的一种特殊表现形式出现。</p>
<p><strong>动画融合</strong></p>
<p>为不同的两个动画同时播放提供基于权重的融合支持，比如一边跑一边开枪，可以是跑和开枪两个动画的融合。</p>
<p><strong>动画切换状态机</strong></p>
<p>以前从一个动画向下一个动画切换的时候，需要用代码详细控制。unity4.3内置动画状态编辑器，让动画切换规则可见，并且定义了一些基本的切换规则，可以无需代码实现动画的自动切换。</p>
<p>至于需要代码控制的切换，只需调用<code>SetTrigger</code>。</p>
<h2 id="其他">其他</h2><p><strong>UI控件</strong></p>
<p>GUITexture和GUIText</p>
<p><strong>声音</strong></p>
<p>AudioSource</p>
<p><strong>线程</strong></p>
<p>过一阵再做一件事情，可以用<code>SetDelay</code>，也可以用<code>StartCoroutine</code>。</p>
<p><strong>时间控制</strong></p>
<p>Time.timeScale</p>
<hr>
<p>相比之下，cocos2dx显得落后很多。落后的原因，我觉得差不多是两块：收益和技术。</p>
<p>感觉cocos2dx做引擎没能挣什么钱，靠的是前台的游戏养活。收益不足的话，怎么补充人员开发更丰富的工具呢。光靠开源代码，是没法和unity这种工具抗衡的。</p>
<p>另一块是技术。现有的开发者技术很强，但是收益不足的话，无法吸引更多技术强力的开发者进来，为cocos2dx提供更强的动力。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[11月，很高兴买了iMac]]></title>
        <link href="life/201311-imac.html"/>
        <published>2013-11-23T16:00:00.000Z</published>
        <updated>2013-11-23T16:00:00.000Z</updated>
        <id>life/201311-imac.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="我买了21-5低配">我买了21.5低配</h2><p>几年前的老电脑，硬件渐渐不稳定，时不时程序崩溃，或者蓝屏。等到国行iMac上线，就买了一台。</p>
<p>看过很多吹捧osx的文章，说什么改变生活，GUI和控制台的完美结合，用过就不想用别的了等等。说实话，我觉得我花了9k但是没有感受得到9k的价值（<strong>我一边写文章一边改变了自己的想法(๑•́ ₃ •̀๑)</strong>）。</p>
<h3 id="mac优势">Mac优势</h3><p><strong>颜色很棒</strong> 。用过几个显示器，从来没有这么舒服和靓丽的颜色。</p>
<p><strong>terminal秒杀cmd</strong> 。外观很重要，每次用到cmd都想一头撞死。powershell已经很好看了，但是提权仍旧不方便。</p>
<p><strong>mission control很直观</strong> 。在win下切换任务，make me think think think，感觉很累。有了mission control，配合magic mouse，呼之则来。</p>
<p><strong>全屏focus</strong> 。帮助我集中注意力到当前任务上，算是一个喜欢的小特性吧。其他系统也有软件具有全屏功能，但并非系统原生。osx下的全屏配合magic mouse手势，切换到其他窗口非常方便。</p>
<p><strong>高效的图形驱动</strong> 。作为一个linux，显卡驱动程序的性能真不是盖的。</p>
<h3 id="没有9k价值">没有9k价值</h3><p>买iMac，我是冲着3件事去的</p>
<ol>
<li>xcode开发</li>
<li>外观良好的terminal，linux命令行</li>
<li>高效的图形性能</li>
</ol>
<p>入手后，和预期相差不少。我的意思是，用这个不菲价格，osx提供的方案还不够完美，其他系统能用更低的价格，提供类似甚至更好的方案。</p>
<p><strong>不是100%的linux命令行</strong> 。我现在用homebrew安装命令行程序，希望他能包含大部分我想用的模块。总有一种命令行只是这个系统下的一个客人的感觉，不太舒服。</p>
<p>windows下也有类似的程序<a href="https://github.com/lukesampson/scoop">scoop</a>，只是差在powershell缺乏提权和目录的非linux。</p>
<p><strong>GUI不比别人强</strong> 。magic mouse只能说很漂亮，mission control虽然windows下没有，但若通过touch pad使用windows，切换任务并不困难，手势操作胜过osx。</p>
<p>再有就是ubuntu unity简直是osx的copy，该抄的元素一个不少。若是说冲着osx“完美”的GUI，我觉得选择免费的ubuntu更实惠，反正大家都对网银没辙。而且ubuntu拥有100%的linux命令行。</p>
<p>我本来想说完全可以花60%甚至更少的钱配台式机，<em>i5，好显卡(linux驱动支持好)，8G内存，SSD硬盘</em>，运行ubuntu，图形性能接近甚至超过osx。</p>
<p>实际到京东配下来，价格并不算太优惠。而相比买入iMac所独占获得的</p>
<ul>
<li>一体机美观大方，没有凌乱的排线，配上蓝牙键盘和magic mouse，还有比这更干净的桌面么</li>
<li>超棒的显示器，卓越的图形性能，鲜艳的颜色</li>
<li>xcode</li>
<li>静音低耗。我暂时没听到过它发出任何机械声，相比我的老台式机和笔记本，总能听到疯狂的风扇声。待机的时候才30w，而且唤醒是实时的，跟MBA/MBP一样。</li>
</ul>
<h2 id="分享">分享</h2><ul>
<li><a href="http://drops.wooyun.org/tips/734">通过nginx配置文件抵御攻击</a></li>
</ul>
<p>涨姿势了，一般的防御也是这个套路。</p>
<ul>
<li><a href="http://webappsecuritylab.com/?p=6">防御XSS的七条原则</a></li>
</ul>
<p>我觉得知道“不要在页面中插入任何不可信数据”就够了。</p>
<ul>
<li><a href="http://ruby-china.org/topics/14005">Web 中文字体应用指南</a></li>
</ul>
<p>一劳永逸，放弃思考，直接取用。</p>
<ul>
<li><a href="http://www.guifabu.com/?p=8662">斯坦福的一堂赌博课</a></li>
</ul>
<p>企业应奖励那些优秀决策而非优秀的结果。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[创业就是卖出去]]></title>
        <link href="idea/marketing.html"/>
        <published>2013-11-20T16:00:00.000Z</published>
        <updated>2013-11-20T16:00:00.000Z</updated>
        <id>idea/marketing.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>我做了两个月<a href="http://ppt99.sinaapp.com/">快乐上网</a>的回顾。</p>
<p>这个项目不太上台面，但是所经历的，和现在许多真正创业的朋友所经历的并没有多少区别，是我一笔重要的经验。</p>
<p>说下现状，业余，运营成本100/月，截至目前为止收入30。</p>
<h2 id="首先，你要有心灵鸡汤">首先，你要有心灵鸡汤</h2><p>这是我第一次尝试去做技术以外的事情，经历各种初级错误，入不敷出的运营。</p>
<ul>
<li>《黑客与画家》，财富是提供别人需要的东西；</li>
<li>《重来》，随时可以行动；</li>
<li>《精益创业》，听取反馈，不要浪费成本；</li>
</ul>
<p>一个idea要落到地面的第一步是有产品，并且这个产品有人需要。我更喜欢的一句话是</p>
<blockquote>
<p>虽然我们是卖钻孔机的，但实际上我们的用户只是需要墙上有个孔。</p>
</blockquote>
<p>有了idea，就行动作出产品，有了产品接着行动获得用户，有了用户就尽量取得用户的反馈，并依据修改。在这过程中，最重要的事情就是不要浪费成本。</p>
<p>自从做快乐上网，我开始注意其他创业者的消息，特别是个人创业者。一个idea做不好可能有多方面的原因，但是过早的高额硬件成本，会严重挫伤士气。每个月花的越少，就能坚持越长时间，有更多的次数根据用户的意见转型新的尝试。</p>
<p>每个月花的越少，越容易从一点点的用户收入中获得收支平衡，以后即使放弃了，也能让项目自我运行下去。</p>
<p>所以我把网站放在了几乎免费的SAE上，域名也无所谓，只在代理服务器上投入成本。</p>
<p>有了决定，趁热打铁，马上将产品粗糙的开发出来，然后一边推广一边改进。不要害怕太粗糙被嘲笑，一个是用户基本没有，另一个是有人肯笑你好反省哪里做错了。</p>
<p>接下来将按以下几块交叉说明：</p>
<ol>
<li><a href="/idea/marketing-web.html">网站改进</a></li>
<li><a href="/idea/marketing-how.html">推广操作</a></li>
<li><a href="/idea/marketing-data.html">数据统计</a></li>
<li><a href="/idea/marketing-proxy.html">业务改进</a></li>
<li><a href="/idea/marketing-seo.html">SEO规划</a></li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[快乐上网0.1]]></title>
        <link href="idea/proxy-tunnel.html"/>
        <published>2013-09-07T16:00:00.000Z</published>
        <updated>2013-09-07T16:00:00.000Z</updated>
        <id>idea/proxy-tunnel.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>完成度很低，暂不公开，只发放给一些天使用户测试。</p>
<h2 id="免费的东西是有成本的">免费的东西是有成本的</h2><p><a href="http://hwh008.github.io/idea/proxy.html">做代理的点子</a>在得到网友的支持后，我就开始动手实现了。最开始，我所懂的只是大概知道，用个代理软件，就可以让其他不能上网的机器上网了，其他的可以说一窍不通。<br>我要做的是一个减轻用户验证频率的代理，需要对代理软件能做极大的自定义调整。一开始相中Varnish，觉得他的调整范围还是蛮大的，但是发现他是反向代理后，决定还是从完全的代理代码入手。<br>我从github搜索了几个基于nodejs的代理软件，在nodejs各个版本之间如此“稳定一致”的情况下，很多代码要么做修改，要么修改了也只能运行在某个特定版本下。<br>总算筛选出能用的代码后，摸索其中的代理实现原理也曲曲折折。http的代理基本好说，看到的实现大体是解析用户发来的request，然后新建request请求数据，把结果返回给用户。https的代理就麻烦了，竟然是同http代理一个做法，冒充了主机，这导致了CA证书的信任问题。证书这种高端的东西，是甩给用户看的吗？<br>还好我是有参考的，我看到别人提供的服务并没有提醒证书问题，这个问题应该有办法避免的。我又试用了其他代码，有一份代码在做https代理的时候，没有出现证书问题，原理很简单，老老实实做转发，不要冒充。<br>到此，代理实现原理基本摸索算完成，然后在这上面开发了简单的认证控制。</p>
<h2 id="隧道是自由">隧道是自由</h2><p>以前总是通过境外ssh的动态端口模式上网，所以花20刀入了个linode，结果发现，即使我不是向facebook主机请求facebook数据，GFW仍旧会毫不犹疑的干掉连接。只好在42区再入个60块的国内VPS，用户请求先交给国内VPS，然后通过ssh隧道安全送到linode。<br>不得不说，这里面成本太高了，一个月成本接近200。幸运的是，在我和天使用户的一些邮件往来中，特别感谢iamtaylover，我了解到HE提供免费的隧道服务，使我得以摘掉linode的成本。即使隧道收费，费用也应该比入手linodeVPS便宜。</p>
<hr>
<h2 id="我学到什么">我学到什么</h2><ol>
<li>代理服务器的实现原理和细节，理所当然的。</li>
<li>买便宜够用的VPS。VPS的提供商和广告太多，骗子也太多。linode很贵，但是真是一分钱一分货，业务大的还是建议选linode。</li>
<li>iptables，NAT，route，以前重来不想的，真是用到就会了</li>
</ol>
<hr>
<blockquote>
<p>Written with <a href="http://benweet.github.io/stackedit/">StackEdit</a>.</p>
</blockquote>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[上色是个苦力活]]></title>
        <link href="game-art/draws-on.html"/>
        <published>2013-08-26T16:00:00.000Z</published>
        <updated>2013-08-26T16:00:00.000Z</updated>
        <id>game-art/draws-on.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>继<a href="http://hwh008.github.io/game-art/draw-by-hand.html">开始画画</a>以后，又抽空画了一些。临摹的关键是注重比例，轮廓草图打的时好时坏。即使轮廓草图再差，经过仔细上色后，也能画出一幅有模有样的作品来。上色费的功夫越多，画面越像，画画其实是个苦力活，不过因为是右脑机制，除了手累点，其实蛮享受的。</p>
<hr>
<p>这个画了一半突然不想画下去了，因为心情不好。作画时最能看一个人内心是否宁静了，如果浮躁有心事的话，肯定干不了上色这种细致的苦力活。<br><em>四个小时</em><br><img src="./res/13-8-27-1.jpg" alt="p1"></p>
<hr>
<p>又是一个姑娘，稍微把左护肩画小了。如果你能从<strong>麦思涂鸦</strong>看到这幅画的绘画流程，你就能明白从一个比小学生作品还次的蜡笔画一般的草图，转变到这种效果，需要多么苦力的上色处理了。<br><em>十个小时</em><br><img src="./res/13-8-27-2.jpg" alt="p2"></p>
<hr>
<blockquote>
<p><em>此篇博客长期更新</em></p>
<blockquote>
<p>Written with <a href="http://benweet.github.io/stackedit/">StackEdit</a>.</p>
</blockquote>
</blockquote>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[付费翻过一堵墙]]></title>
        <link href="idea/proxy.html"/>
        <published>2013-08-26T16:00:00.000Z</published>
        <updated>2013-08-26T16:00:00.000Z</updated>
        <id>idea/proxy.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>标题稍微含蓄点，大概的意思是想做一个收费的正向代理。这不是什么新鲜事了，大家可能都有买过ssh服务，或者VPN，免费的也用过GoAgent，不过我想做的不是这种的。<br>从我最近见识的一个付费服务说起吧，这个服务通过让用户的浏览器加载<a href="http://zh.wikipedia.org/wiki/%E4%BB%A3%E7%90%86%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE">pac</a>文件，连接到公网IP的代理服务器解决问题，我付费用了两个月，觉得这种方式比较平易近人，这是什么意思呢：</p>
<blockquote>
<p>有那么一波用户，现在肯定还不明白所谓的ssh,VPN什么的，然后你让他装个客户端，再用也许听都没听过的现代浏览器下载一个插件，所有东西还要设置一番才能妥妥的上网，这用户肯定打游戏去了。<br>另外就是价格，能比其他的付费服务便宜很多。</p>
</blockquote>
<p>这个付费服务很好，但是有些瑕疵：</p>
<ol>
<li>没有编辑用户个人pac的人性化接口，有特殊需求的基本都是靠群里说着加上的。</li>
<li>基于squid，认证容易过期，可调整不多，据反映性能压力也很大，老板总说要提价。</li>
</ol>
<p>我的想法就是改进这两点，特别是第二点。方案是通过nodejs做面向用户的正向代理，这样可以在代码里做很多提升用户认证体验的工作，全面的定制性完爆squid，性能还不清楚。然后nodejs把用户请求转发给反向代理Varnish，做一个页面缓存层，最后由反向代理再去访问另一个简单高效的正向代理软件。<br>这个结构很啰嗦，但是要定制性的话，nodejs的代码越靠前越能准确判断用户，减少用户认证成本。此外如果不用缓存的话，是可以割掉Varnish后面一段的。</p>
<p>最后说下我付费用过的这个服务可能的成绩，群里应该有300个付费用户吧，一人一月10块钱，自己算算。另外这个东西是不可能做大的，贵国的情形你懂，用户越多出问题的时候抱怨越剧烈。所以，<strong>招呼个两三百用户，每月挣点零花钱就得了</strong>。</p>
<hr>
<p>接下来我准备动手做一个，顺便征几个早期测试用户，免费服务哦，有意的留个记号吧:-D</p>
<blockquote>
<p>Written with <a href="http://benweet.github.io/stackedit/">StackEdit</a>.</p>
</blockquote>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[8月刀剑2火热开测]]></title>
        <link href="life/20130824dj2.html"/>
        <published>2013-08-23T16:00:00.000Z</published>
        <updated>2013-08-23T16:00:00.000Z</updated>
        <id>life/20130824dj2.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <h2 id="玩玩吧">玩玩吧</h2><p><a href="http://d2.qq.com/">刀剑2</a>终于不删档了，开到第4组服务器，每一组都满满的。这个游戏的PVP我很喜欢，但是厌倦前期的升级流程。在线RPG游戏分三阶段：</p>
<ol>
<li>修炼</li>
<li>装备追求</li>
<li>对抗，短期增益博弈</li>
</ol>
<p>作为一款动作游戏，修炼本来的目的，是让用户熟悉核心的操作技巧，可惜大家都把这做成了升级，迅速的把人物冲到游戏当前封顶级数。这个过程其实挺枯燥的，主要目的是打经验，不管如何包装，沉闷的刷怪就是这阶段日复一日的活动。<br>我厌倦的地方在于，这阶段根本不能去感受游戏里有趣的玩点，整个群体都在争取经验上的最大收益，而周期又是那么长。</p>
<h2 id="维护忙">维护忙</h2><p>我做的是那种平时事不多，上线后各种突发状况多的要死的工作，今早2点还去加了个班。平时玩法的活不能多揽，揽多了上线后可能就没有时间处理这个职位应该负责的工作了。</p>
<p>这几天遇上了高CPU的问题，虽然linux/perf工具有一定帮助，但是基于采样的分析结果，所展示的热点并不完善，所以内置的性能分析器是相当有必要的。</p>
<p>遇到问题，能重现是最好的，不能重现时有日志也是好的。两者皆无，还是有那么一个锦囊，偶然想到的，<strong>用expect控制gdb自动调试在线服务器程序</strong>，简单试验了下，没有源码的情况下是管用的。既然是锦囊，万不得已不可拆啊。</p>
<hr>
<h2 id="生活">生活</h2><p>前阵子突发高烧，就是睡一觉醒来38度的那种，起床后立马跑大医院去了。记得上一次发烧是在大学的时候了，晚上烧的，校医院不开，自己跑去买了退烧药和消炎药。退烧后，稍微集中精神用用脑子就容易眩晕，缓了好多天吧。大家高烧后千万要注意休息，减少用人脑和电脑。</p>
<p>终于学会游泳了，从第一次下游戏池到现在多少年了啊！！！！之前很容易就学会了躺在水面上，学会的方法就是————你真的躺在水面上就好了。蛙泳一直学不会换气，朋友们各种指导动作，就是换不了气。<br>那天网上看了蛙泳动作分解，到水里体验的时候，突然感受到水对我的支撑，就学会换气了。其实什么动作都无所谓，伸直身体，相信水，水自然让你浮起来，然后双手一撑，脑袋自然离开水面换气了。相信水，水自然回报你的相信，时不时的换换气，哪里需要什么动作标准啊。</p>
<h2 id="分享">分享</h2><ul>
<li><p><a href="http://terrytai.com/articles/2-how-to-begin-soho-1">如何开始你的 SOHO 之旅</a><br>工作好多年了，也觉得为别人工作够了，差不多该回家自己挣自己的了。</p>
</li>
<li><p><a href="http://www.oschina.net/news/43149/network-relationship">近亲不如远邻</a><br>熟人知道的信息其实你都知道了，圈子就这么点，所以可能特别有用的信息都是跟你不特别熟悉的人提供给你的。</p>
</li>
<li><p><a href="http://www.36kr.com/p/205249.html">基础功能是否值得收费</a><br>免费可以限期限量限额，把所有功能当成收费的努力去做，然后让用户免费体验一阵子就好。</p>
</li>
<li><p><a href="http://www.apkbus.com/android-132072-1-1.html">寒门再难出贵子</a><br>文章很长，观点非常有争议，但是不可否认每个收入的圈子正在形成并且逐渐封闭。一个婚姻如果能高攀或者两家能同等全力支撑，物质生活会更容易更丰富。</p>
</li>
<li><p><a href="http://www.zreading.cn/archives/3923.html">放诸古今皆准的权力规则</a><br>一党还是多党，是不是三权分立，都是细节。我们当然生活在一个民主社会，问题是我们只是“名义选民”而已</p>
</li>
</ul>
<blockquote>
<p>Written with <a href="http://benweet.github.io/stackedit/">StackEdit</a>.</p>
</blockquote>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[动手画画超简单]]></title>
        <link href="game-art/draw-by-hand.html"/>
        <published>2013-08-10T16:00:00.000Z</published>
        <updated>2013-08-10T16:00:00.000Z</updated>
        <id>game-art/draw-by-hand.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>看过<a href="http://hwh008.github.io/game-art/draw5days.html">五天学会绘画</a>后，就到了实际动手画画的阶段。<br>我先是使用铅笔和纸，我觉得拿着笔最能天马行空。在纸上勾勒轮廓，然后打明暗，实际的练习效果不好：</p>
<ol>
<li>没什么基础，线条画不利索，误差大，全图显得很丑陋</li>
<li>基本线条画不好，橡皮涂改较多，麻烦</li>
<li>没有别的颜色，就铅笔是那种灰灰的颜色</li>
</ol>
<p>总之用铅笔在纸上画画，没有做出稍微能看的作品，提升我的一些信心。</p>
<h2 id="在软件上学画画">在软件上学画画</h2><p>我最先尝试的是用ipad画画，怎么说也是触屏，感觉比用鼠标更能天马行空一些。我画了一个我刚喝完的百事可乐瓶。<br><img src="./res/2013-08-03-baishi.jpg" alt="p1"><br>手指画的最大局限是，手指太粗，又不透明，按下去细细的线条常常没有落在预想的位置上。</p>
<p>鉴于手指画不好控制线条的落点，我又用鼠标在<em>PAINT.NET</em>上画了一幅，在<em>花瓣</em>上看到的房子。<br><img src="./res/house1.png" alt="p2"><br>控制精确，比百事可乐略强，不过鼠标的确不能天马行空，所以很多屋顶的曲线装饰我没能勾勒出来，而且长期按住鼠标左键画画，右手真的很累。</p>
<p>为了改进这种绘画体验，我有两个选择，为ipad买一支<strong>Jot Pro超细笔</strong>，或者买一个电脑的美术手绘板。Jot Pro淘宝卖180，手绘板的基本价格好像要从300起吧，图便宜我买了Jot Pro。如果有ipad，那么Jot Pro让你在笔头下看到自己的线条，这个是手绘板比不来的。另一面，虽然Jot Pro的准确度比手指头高很多，可能还是无法与手绘板相比。不管怎么说，我很满意买了Jot Pro。</p>
<p>我拿着Jot Pro在ipad上画画，同时还利用软件学画画，这是什么意思呢？这里介绍一下<strong>麦思涂鸦</strong>，ipad上的一款涂鸦软件，<em>36kr</em>介绍新项目的时候提过，特色有两点：</p>
<ol>
<li>绘画作品可上传涂鸦社区，artist互相交流，SNS。</li>
<li>可以观摩其他人的绘画作品，并能重放作品的绘画流程。</li>
</ol>
<p>作品区有很多精选作品，人气作品，所有作品都能播放绘画流程，有什么比看着很棒的作品从无到有的过程更能学习到如何画画呢，看别人如何打草图，看别人如何下笔，看别人如何打色，好比名师言传身受，我诚意推荐此款软件。</p>
<hr>
<p>我在<strong>麦思涂鸦</strong>的第二个作品是一个头，本来是想画全身，没打草图就感觉难度太高了。<br><em>两个小时</em><br><img src="./res/13-8-11-head.jpg" alt="head"></p>
<hr>
<p>第三个作品是一个宝箱，宝箱上的钉子没有画出来，懒了。<br><em>两个小时</em><br><img src="./res/13-8-11-box.jpg" alt="box"></p>
<hr>
<p>第四个作品是海底场景，本来左侧也有几块石头的，可是我画这个的时候，可能因为笔画数目太多了，<strong>麦思涂鸦</strong>崩溃了很多次，导致我右上石头的很多叶子都没有保存下来，心灰意冷，就留下了这么个半成品。<br><em>六小时</em>
<img src="./res/13-8-11-sea.jpg" alt="sea"></p>
<hr>
<p>第五个作品画了一只小猪，这种图<a href="http://hwh008.github.io/game-art/begin-inkscape.html">inkscape复制起来特别容易的</a>。<br><em>两个小时</em>
<img src="./res/13-8-11-pig.jpg" alt="pig"></p>
<hr>
<p>到目前为止，右脑画画模式渐入佳境，会渐渐尝试临摹更多复杂的物体和场景，直到有一天可以临摹脑内的想象之物。<br>一万小时，扣除12个小时，还剩<em>9988</em>个小时。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[读《五天学会绘画》]]></title>
        <link href="game-art/draw5days.html"/>
        <published>2013-08-05T16:00:00.000Z</published>
        <updated>2013-08-05T16:00:00.000Z</updated>
        <id>game-art/draw5days.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p><a href="http://hwh008.github.io/game-art/begin-inkscape.html">inkscape我已经熟悉的差不多了</a>，所以制作美术资源这个事情，也觉得到了瓶颈，所以觉得开始学习真的画画了。在我生日那天，公司送了本我选的书，betty的《五天学会绘画》。这本书，真的非常适合毫无基础的人，对于想学画画的程序员，我诚意推荐。<br>这本书不像一般的绘画教育图书，一上来就讲怎么透视，怎么打明暗，而是从一个画画技巧不相关的问题说起，<strong>找回你的右脑绘画功能</strong>。</p>
<h2 id="读书笔记">读书笔记</h2><ul>
<li>绘画是一项视觉任务，而不是一项运用画笔技巧的活动。</li>
<li>想要画画，得用画家的方式看事物，什么是画家的方式呢？就是用右脑真实的看，而不是用左脑“看”</li>
</ul>
<blockquote>
<p>要找回右脑，必须干掉左脑</p>
</blockquote>
<ul>
<li>画画是右脑功能，因此绘画过程中必须降低甚至屏蔽左脑的干扰。</li>
<li>左脑主要负责快速概括，运用词汇和符号。因此尝试投入到无法用词汇和符号表达的任务中，就能令左脑放弃控制权。<blockquote>
<blockquote>
<p>不要在绘画中使用词汇系统，不要说眼，手等词，改说某某形状，某某曲线
<br></p>
</blockquote>
</blockquote>
</li>
</ul>
<p>符号元素与生俱来，幼年右脑发育未完善时，左脑的介入让我们有了基本的作画能力。长大后虽然我们可以用右脑进行真正的观察，但是已经习惯了左脑的绘画模式。</p>
<ul>
<li>轮廓画可以绕开符号系统。</li>
<li>将作品颠倒后临摹，则能完全停止符号系统的工作。因为左脑无法对看到的东西进行命名，只能依靠右脑对形状和轮廓的观察，像拼图一块块的完成作画。</li>
<li>从阴形绘画也能减轻左脑对主体的符号解读。</li>
</ul>
<blockquote>
<p>基本技巧</p>
</blockquote>
<ul>
<li>选择某个阴形做为基本单位，将全图按比例绘制在框架内。</li>
<li>透视其实就是相信你右脑看到的，相信你用对比工具测量的长度和角度，而不是相信你左脑知道的。凳子四条腿一样长，但是在透视下测量未必是这样。</li>
<li>透视测量的时候用单眼。</li>
<li>辨别明暗的时候，用斜视。</li>
<li>头像是最难画也是最精彩的，要掌握各部分的比例关系。</li>
</ul>
<hr>
<p>绘画其实是一项视觉任务，意思是精确的复制你的视觉，你的右脑视觉，不要被左脑的符号系统干扰了。<br>临摹做多以后，就可以凭记忆作画。练习越多，绘画能力越成熟，总有一天可以将想象中的图案以右脑模式绘画出来，这样就可以随心创造游戏的美术效果了。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[从inkscape开始]]></title>
        <link href="game-art/begin-inkscape.html"/>
        <published>2013-08-03T16:00:00.000Z</published>
        <updated>2013-08-03T16:00:00.000Z</updated>
        <id>game-art/begin-inkscape.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>程序员开发独立游戏，美术资源是永远的痛。</p>
<ol>
<li>忽悠不来美术合伙人</li>
<li>免费资源不符合风格，不可以在商业用途中使用</li>
<li>外包贵，一分钱一分货，找便宜的可能不靠谱</li>
</ol>
<p>在财务状况不允许的情况下，外包不算是一个很好的决策。那么剩下的路只有一条，<strong>be an artist</strong>。这很疯狂，编程花了好几年，才达到手熟的境界，从头开始学画画，大概也需要用掉好几年的时间才能出师，而且多数程序员都认为自己没有右脑美术天赋，完全是个画瞎子。</p>
<blockquote>
<p><em>Yipit</em>的创始人，之前做金融行业，然后打算创立一个科技公司。他将创意原型外包出去，然后花了九个月的时间，明白了外包以及找一个CTO合伙人是不靠谱的想法，在业务根本没有开始的条件下。别无选择的，他只好痛苦的开始学习编程，三个月后，他的网站上线了，同时还写了一本书。</p>
</blockquote>
<p>隔行如隔山，但不代表不能从零开始学习。虽然我和大家一样，是画瞎子，右脑后脑勺甚至比左脑小一些，平时画个简笔画也奇丑无比，但我还是决定重新开始学习。这一次我没从<strong>学会画画</strong>这个目标开始，而是尝试去<strong>制作美术资源</strong>。</p>
<hr>
<h2 id="制作美术资源">制作美术资源</h2><p>制作美术资源这个目标，比学会画画更容易实现，而且也更不需要右脑功能。这是什么意思呢？单从字面讲，就是把一个创意发散的境界，描述成一个规规矩矩的工业输出流程。从操作上讲，画画是拿笔挥毫泼墨，形状上比较自由，颜色是一笔笔画上去的，深浅不一。而制作美术资源，形状一般都倾向简单和组合，同时颜色是填充式的，更容易左脑理解。<br>不用抽象的词汇描述了，可以先从<a href="http://gamerboom.com/archives/39884">供独立游戏开发者参考的2D美工教程</a>开始，我看过以后如醍醐灌顶，原来美术方面的工作可以从这样一个方向开始。</p>
<blockquote>
<p>我先浏览了这个教程，然后照着其中一个案例做了一下，很容易的成功了，那种感觉非常好。整个过程就是做出几个形状，排列组合，然后填充不同的颜色，或者是渐变，或者调整一下透明和模糊。<br>我以前也看过ps类的教程，但是都没有做出来过，因为需要掌握的技巧和概念太多了。在这个教程，在inkscape中，你只要掌握<strong>制作形状</strong>，掌握渐变，掌握模糊就已经可以开始了，这些简单的技巧表达了光影效果，绘画中的层次感的来源。</p>
</blockquote>
<p>我很兴奋的想看看关于inkscape更多的使用方式，然后我找到了<a href="http://www.youku.com/playlist_show/id_3142703.html">一系列的视频教程</a>，如饥似渴的学习每一篇。在这里我学到了<em>tile clone</em>, <em>patten along path</em>, <em>jitter</em>, <em>texture blender</em>等相对高级又比较好用的操作，也初步对如何制作图像的立体感有了基本的认识。</p>
<blockquote>
<p>完成入门阅读后，就要动手临摹，否则也是纸上谈兵，空谈误国。我先是从<strong>opengameart</strong>找了一些喜欢的资源临摹，<strong>opengameart</strong>的资源风格偏怀旧，像素画居多。我临摹了几幅，场景的和UI的都有。<br><img src="./res/g8296.jpg" alt="p1"><img src="./res/g12141.jpg" alt="p2"><img src="./res/g5800.jpg" alt="p3"><br>UI相对容易临摹，而且更容易制作出非常真实的效果。接着我发现<strong>花瓣网</strong>上的素材更丰富更现代，我从中临摹了许多UI素材，以及复杂的物件。<br><img src="./res/g3450.jpg" alt="p4"><img src="./res/g3489.jpg" alt="p5"><img src="./res/g9276.jpg" alt="p6"></p>
</blockquote>
<hr>
<p>不得不说的是，临摹制作的过程中，我产生了一些工作难度，工作量和工作效率的看法，我想这会对我找个美术合伙人或者外包的时候有所帮助。</p>
<ol>
<li>一个UI组件，我大概需要花费两个小时进行制作，如果一个界面上组件多一些，工时大概也能推导出来。所以对靠谱的外包，应该如何付费，有了靠谱的认识。人家出来混也是要吃饭的。</li>
<li>UI素材比物件素材好做很多，主要是因为形状更简单，颜色组合也更简单。UI素材我看着就能制作出来了。</li>
<li>稍微有点难度的物件素材，我必须把原图铺到最下层对着线条绘制，然后在上色。操作上把这叫做图片矢量化。</li>
<li>创作能力有限，无法突破，毕竟前面的学习其实都没有用到右脑，用软件临摹得再像，也无法随意的制作自己全新的美术资源，在喜欢的素材上二次创作倒是可以。</li>
<li>无论如何，总算开始入门了。</li>
</ol>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[写blog的理由]]></title>
        <link href="life/blog-rework.html"/>
        <published>2013-08-01T16:00:00.000Z</published>
        <updated>2013-08-01T16:00:00.000Z</updated>
        <id>life/blog-rework.html</id>
        <content type="html" xml:base="" xml:lang="en">
            <![CDATA[ <p>自从不怎么在<a href="http://www.cppblog.com/darkdestiny/">cppblog</a>更新以后，就陆陆续续的在<strong>SAE</strong>建立了几次独立博客，写了几篇文章，然后又停更，停更一段时间后就删掉了。<br>周期性的书写热情，是停更的原因。独立博客几乎不存在的流量和讨论可能性，也进一步浇灭了停更后的热情。同时那段时间<strong>SAE</strong>还收取应用维护费，吓得我赶紧删掉那个无人挂念的站点。</p>
<p>这一次重来，我决意想清楚我写博客的动机。</p>
<blockquote>
<p> 基本的出发点有三个  </p>
</blockquote>
<ol>
<li>输出内容（自我品牌）  </li>
<li>交流观点（交朋友）  </li>
<li>分享采集（如何转载？）</li>
</ol>
<blockquote>
<p>两个附加的考虑是  </p>
</blockquote>
<ol>
<li>独立博客还是依赖平台  </li>
<li>存档如何处理</li>
</ol>
<hr>
<h2 id="输出内容和交流观点">输出内容和交流观点</h2><p>其实就是想建立自我品牌，以及和有共同兴趣的人交朋友。这两个出发点其实是一个需求：<strong>被人承认</strong><br>只有输出有质量的内容，才能赢得别人的认同。输出不仅仅是书写，还包括推广的意思，不推广，酒香也怕巷子深。</p>
<p>现在是好的时代，优质的博客比以前容易推广多了：</p>
<ul>
<li><p>一系列高质量的内容</p>
<blockquote>
<blockquote>
<p>如果有一个系列，肯定比只有几篇文章强。比如最近的<a href="http://jenniferdewalt.com/">180天做180个网站</a>。</p>
</blockquote>
</blockquote>
</li>
<li><p>到人群中发布</p>
<blockquote>
<blockquote>
<p>现在推广高质量的内容太容易啦，因为社区新闻网站越来越受欢迎。比如<strong>reddit</strong>， <strong>digg</strong>， <strong>hacker news</strong>， <strong>startup news</strong>， <strong>极客头条</strong>。把链接往上一贴，有质量的内容立马会吸引高端用户的N次传播。</p>
</blockquote>
</blockquote>
</li>
</ul>
<h2 id="博客转载">博客转载</h2><p>我平时在网上看到好文章以后，会采集到<strong>麦库</strong>，然后分类整理成笔记。我很希望能将采集作为自我象征的一部分，这些内容一定程度上含蕴着我的喜好和品位。<br><strong>麦库和印象笔记</strong>都可以分享笔记，可是氛围不是很浓，似乎也没有类似磁贴的API能嵌入到博客中。如果我仅仅是在博客上放上共享笔记的链接，几乎不会有人常点进去。如果全文拷贝转载，增加工作量的同时还容易引起原创者和搜索引擎的厌恶。如果类似<strong>digg</strong>那样不停的贴笔记链接，也比较容易惹人厌烦。</p>
<p>我在既不能放弃分享笔记，又不想转载，又不想贴链接之间矛盾很久后，想起了<a href="http://baozishan.in/">我住包子山</a>，他的博客实际上是每隔一段时间，记录一下流水，然后顺便点评和分享几个有价值的链接。<br>以这种类似的方式，周期性的分享自己采集的内容，同时为读者在信息的巨浪中过滤出了一些可能更有价值的文章。</p>
<h2 id="选择独立博客还是博客平台？">选择独立博客还是博客平台？</h2><p>这是一个不太重要，但仍旧值得考虑的问题。众所周知，独立博客自由度最高，但是操作最麻烦，得租个VPS，外加安装四大软件，配置防火墙等等。选择博客平台就相对轻松一些，注册了就能写文章，像生活类的可以选门户网站的博客空间，特定领域的可以选<strong>csdn</strong>， <strong>cppblog</strong> 等等。博客平台的另一个好处是容易带来流量和讨论，编辑一高兴给你个<em>加精</em>就更好了。<br>坏处也是有的，博客的样子就那么几种，可修改性不多。有些能改页面贴脚本的吧，还管你要钱。如果你真不花钱，那你根本就不是用户，而是人家的产品，他们的广告把你博客上能占据的地方都占据了。更糟糕的是，如果你出言不慎，轻则删贴，重则删账号。</p>
<p>我不想弄个独立博客那么麻烦，所以我打算使用某个平台。</p>
<blockquote>
<p>对平台有几点要求：</p>
</blockquote>
<ol>
<li>非特定领域的博客平台。因为我写的内容会很杂，我不再使用<strong>cppblog</strong>这个领域性很强平台也是因为这方面的洁癖。</li>
<li>非国内被监管的平台。我想绑定自己的域名而不需要备案，但不想无故的被喝茶或者被失踪。</li>
<li>博客平台有跟我相容的氛围。因为这个原因，我过滤掉了国内的轻博客，设计师和小清新的气息太浓烈了。</li>
<li>容易获取博客存档。寄人篱下，一定要看好自己的财物。</li>
</ol>
<p>根据上面的几个条件，我体验了国内几个博客写作的创业项目：</p>
<ol>
<li>简书</li>
<li>farbox</li>
<li>writings.io</li>
</ol>
<hr>
<h2 id="简书真不合适">简书真不合适</h2><p>简书是个好平台，上面有质量的文章不少，是一个纯粹的写作环境，纯粹到连评论功能都没有。虽然他有他的理由，但是我对此无法忍受，我的出发点之一是交流和交朋友，如果彼此不能就某个问题切磋切磋，光凭一个作者链接能产生多少关系行为呢。</p>
<h2 id="farbox似乎有点难用">farbox似乎有点难用</h2><p>用dropbox作为博客存档的想法真的很赞，farbox站点的可定制性也非常强。如果只是使用默认模板的话，farbox非常容易上手，但是默认的模板又有多少能满足大家的需求呢。于是我看了farbox的模板结构和API文档，我不得不说我有点笨，实在没有一下子学会。</p>
<h2 id="writings-io可定制的很少">writings.io可定制的很少</h2><p>writings.io的书写编辑器手感非常流畅，所见即所得+键盘流。文章都靠分类管理（<em>我不太喜欢容易拼错的标签</em>），并且具有评论功能，虽然限制用<strong>Disqus</strong>，还可以一键导出jekyll存档。但是可定制性真的很差，我真不明白博客banner为什么非要用gravatar头像，博客描述中不能使用<code>&lt;script&gt;</code>标签，而这一切无法改变也无法隐藏。</p>
<hr>
<h2 id="遇见nico">遇见nico</h2><p>我在farbox和writings.io之间犹豫了好久，因为实在没什么可用了，但这两个又没有简单而彻底的满足我的需求。然后看到了github和Jekyll组合的静态网站，但Jekyll是基于ruby的，我不想在win7上安装ruby相关的软件遇上麻烦，我已经有nodejs了。<br>所以我在github上搜索<em>static website generator</em>，尝试了好几个基于node的生成工具，都觉得修改模板比较复杂，直到遇到<a href="http://lab.lepture.com/nico/">nico</a>。我选择nico的理由就是在主页上赫然看到了<strong>中文文档</strong>几个字，一种亲切感油然而生，加快了我的学习和熟悉过程。<br>nico模板的源码非常简洁，API也比较少，这使得我定制页面更加容易，实际上我花了10分钟就看完所有模板了。</p>
<p>选定了nico，我决定模仿farbox，在github上开始自己的博客。</p>
<blockquote>
<p>我用dropbox保存nico相应的博客存档，每当我书写的时候，dropbox自动为我保存数据。<br>通过nico生成 _site目录以后，用git将他上传到github。<br>就这样，我要求的绑定域名，定制，氛围，存档等需求都一应俱全了。</p>
</blockquote>
<hr>
<p><strong>文章怎么收尾？总感觉意犹未尽 :)</strong></p>
]]>
        </content>
    </entry>
</feed>